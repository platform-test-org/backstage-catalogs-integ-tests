{"version":3,"file":"index.esm.js","sources":["../src/routes.ts","../src/plugin.ts","../src/components/Cards/Group/MembersList/MembersListCard.tsx","../src/components/Cards/Meta/LinksGroup.tsx","../src/components/Cards/Group/GroupProfile/GroupProfileCard.tsx","../src/components/Cards/User/UserProfileCard/UserProfileCard.tsx","../src/components/Cards/OwnershipCard/useGetEntities.ts","../src/components/Cards/OwnershipCard/ComponentsGrid.tsx","../src/components/Cards/OwnershipCard/OwnershipCard.tsx","../src/components/MyGroupsSidebarItem/MyGroupsSidebarItem.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createExternalRouteRef } from '@backstage/core-plugin-api';\n\nexport const catalogIndexRouteRef = createExternalRouteRef({\n  id: 'catalog-index',\n});\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  createComponentExtension,\n  createPlugin,\n} from '@backstage/core-plugin-api';\nimport { catalogIndexRouteRef } from './routes';\n\n/** @public */\nexport const orgPlugin = createPlugin({\n  id: 'org',\n  externalRoutes: {\n    catalogIndex: catalogIndexRouteRef,\n  },\n});\n\n/** @public */\nexport const EntityGroupProfileCard = orgPlugin.provide(\n  createComponentExtension({\n    name: 'EntityGroupProfileCard',\n    component: {\n      lazy: () => import('./components').then(m => m.GroupProfileCard),\n    },\n  }),\n);\n\n/** @public */\nexport const EntityMembersListCard = orgPlugin.provide(\n  createComponentExtension({\n    name: 'EntityMembersListCard',\n    component: {\n      lazy: () => import('./components').then(m => m.MembersListCard),\n    },\n  }),\n);\n\n/** @public */\nexport const EntityOwnershipCard = orgPlugin.provide(\n  createComponentExtension({\n    name: 'EntityOwnershipCard',\n    component: {\n      lazy: () => import('./components').then(m => m.OwnershipCard),\n    },\n  }),\n);\n\n/** @public */\nexport const EntityUserProfileCard = orgPlugin.provide(\n  createComponentExtension({\n    name: 'EntityUserProfileCard',\n    component: {\n      lazy: () => import('./components').then(m => m.UserProfileCard),\n    },\n  }),\n);\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  DEFAULT_NAMESPACE,\n  GroupEntity,\n  UserEntity,\n  stringifyEntityRef,\n} from '@backstage/catalog-model';\nimport {\n  catalogApiRef,\n  entityRouteParams,\n  useEntity,\n} from '@backstage/plugin-catalog-react';\nimport {\n  Box,\n  createStyles,\n  Grid,\n  makeStyles,\n  Theme,\n  Typography,\n} from '@material-ui/core';\nimport Pagination from '@material-ui/lab/Pagination';\nimport React from 'react';\nimport { generatePath } from 'react-router-dom';\nimport useAsync from 'react-use/lib/useAsync';\n\nimport {\n  Avatar,\n  InfoCard,\n  Progress,\n  ResponseErrorPanel,\n  Link,\n} from '@backstage/core-components';\nimport { useApi } from '@backstage/core-plugin-api';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    card: {\n      border: `1px solid ${theme.palette.divider}`,\n      boxShadow: theme.shadows[2],\n      borderRadius: '4px',\n      overflow: 'visible',\n      position: 'relative',\n      margin: theme.spacing(4, 1, 1),\n      flex: '1',\n      minWidth: '0px',\n    },\n    email: {\n      overflow: 'hidden',\n      whiteSpace: 'nowrap',\n      textOverflow: 'ellipsis',\n      display: 'inline-block',\n      maxWidth: '100%',\n      '&:hover': {\n        overflow: 'visible',\n        whiteSpace: 'normal',\n      },\n    },\n  }),\n);\n\nconst MemberComponent = (props: { member: UserEntity }) => {\n  const classes = useStyles();\n  const {\n    metadata: { name: metaName, description },\n    spec: { profile },\n  } = props.member;\n  const displayName = profile?.displayName ?? metaName;\n\n  return (\n    <Grid item container xs={12} sm={6} md={4} xl={2}>\n      <Box className={classes.card}>\n        <Box\n          display=\"flex\"\n          flexDirection=\"column\"\n          m={3}\n          alignItems=\"center\"\n          justifyContent=\"center\"\n        >\n          <Avatar\n            displayName={displayName}\n            picture={profile?.picture}\n            customStyles={{\n              position: 'absolute',\n              top: '-2rem',\n            }}\n          />\n          <Box\n            pt={2}\n            sx={{\n              maxWidth: '100%',\n            }}\n            textAlign=\"center\"\n          >\n            <Typography variant=\"h5\">\n              <Link\n                to={generatePath(\n                  `/catalog/:namespace/user/${metaName}`,\n                  entityRouteParams(props.member),\n                )}\n              >\n                {displayName}\n              </Link>\n            </Typography>\n            {profile?.email && (\n              <Link className={classes.email} to={`mailto:${profile.email}`}>\n                {profile.email}\n              </Link>\n            )}\n            {description && (\n              <Typography variant=\"subtitle2\">{description}</Typography>\n            )}\n          </Box>\n        </Box>\n      </Box>\n    </Grid>\n  );\n};\n\n/** @public */\nexport const MembersListCard = (props: {\n  memberDisplayTitle?: string;\n  pageSize?: number;\n}) => {\n  const { memberDisplayTitle = 'Members', pageSize = 50 } = props;\n\n  const { entity: groupEntity } = useEntity<GroupEntity>();\n  const {\n    metadata: { name: groupName, namespace: grpNamespace },\n    spec: { profile },\n  } = groupEntity;\n  const catalogApi = useApi(catalogApiRef);\n\n  const displayName = profile?.displayName ?? groupName;\n\n  const groupNamespace = grpNamespace || DEFAULT_NAMESPACE;\n\n  const [page, setPage] = React.useState(1);\n  const pageChange = (_: React.ChangeEvent<unknown>, pageIndex: number) => {\n    setPage(pageIndex);\n  };\n\n  const {\n    loading,\n    error,\n    value: members,\n  } = useAsync(async () => {\n    const membersList = await catalogApi.getEntities({\n      filter: {\n        kind: 'User',\n        'relations.memberof': [\n          stringifyEntityRef({\n            kind: 'group',\n            namespace: groupNamespace.toLocaleLowerCase('en-US'),\n            name: groupName.toLocaleLowerCase('en-US'),\n          }),\n        ],\n      },\n    });\n\n    return membersList.items as UserEntity[];\n  }, [catalogApi, groupEntity]);\n\n  if (loading) {\n    return <Progress />;\n  } else if (error) {\n    return <ResponseErrorPanel error={error} />;\n  }\n\n  const nbPages = Math.ceil((members?.length || 0) / pageSize);\n  const paginationLabel = nbPages < 2 ? '' : `, page ${page} of ${nbPages}`;\n\n  const pagination = (\n    <Pagination\n      count={nbPages}\n      page={page}\n      onChange={pageChange}\n      showFirstButton\n      showLastButton\n    />\n  );\n\n  return (\n    <Grid item>\n      <InfoCard\n        title={`${memberDisplayTitle} (${\n          members?.length || 0\n        }${paginationLabel})`}\n        subheader={`of ${displayName}`}\n        {...(nbPages <= 1 ? {} : { actions: pagination })}\n      >\n        <Grid container spacing={3}>\n          {members && members.length > 0 ? (\n            members\n              .slice(pageSize * (page - 1), pageSize * page)\n              .map(member => (\n                <MemberComponent member={member} key={member.metadata.uid} />\n              ))\n          ) : (\n            <Box p={2}>\n              <Typography>\n                This group has no {memberDisplayTitle.toLocaleLowerCase()}.\n              </Typography>\n            </Box>\n          )}\n        </Grid>\n      </InfoCard>\n    </Grid>\n  );\n};\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { EntityLink } from '@backstage/catalog-model';\nimport { IconComponent, useApp } from '@backstage/core-plugin-api';\nimport LanguageIcon from '@material-ui/icons/Language';\nimport {\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Divider,\n} from '@material-ui/core';\nimport React from 'react';\n\nconst WebLink = ({\n  href,\n  Icon,\n  text,\n}: {\n  href: string;\n  text?: string;\n  Icon?: IconComponent;\n}) => (\n  <ListItem button component=\"a\" key={href} href={href}>\n    <ListItemIcon>{Icon ? <Icon /> : <LanguageIcon />}</ListItemIcon>\n    <ListItemText>{text}</ListItemText>\n  </ListItem>\n);\n\nexport const LinksGroup = ({ links }: { links?: EntityLink[] }) => {\n  const app = useApp();\n  const iconResolver = (key?: string): IconComponent =>\n    key ? app.getSystemIcon(key) ?? LanguageIcon : LanguageIcon;\n\n  if (links === undefined) {\n    return null;\n  }\n\n  return (\n    <>\n      <Divider />\n      {links.map(link => {\n        return (\n          <WebLink\n            key={link.url}\n            href={link.url}\n            text={link.title}\n            Icon={iconResolver(link.icon)}\n          />\n        );\n      })}\n    </>\n  );\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ANNOTATION_EDIT_URL,\n  ANNOTATION_LOCATION,\n  GroupEntity,\n  RELATION_CHILD_OF,\n  RELATION_PARENT_OF,\n  stringifyEntityRef,\n} from '@backstage/catalog-model';\nimport {\n  Avatar,\n  InfoCard,\n  InfoCardVariants,\n  Link,\n} from '@backstage/core-components';\nimport {\n  Box,\n  Grid,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Tooltip,\n} from '@material-ui/core';\nimport {\n  EntityRefLinks,\n  catalogApiRef,\n  getEntityRelations,\n  useEntity,\n} from '@backstage/plugin-catalog-react';\nimport React, { useCallback } from 'react';\nimport { alertApiRef, useApi } from '@backstage/core-plugin-api';\n\nimport AccountTreeIcon from '@material-ui/icons/AccountTree';\nimport Alert from '@material-ui/lab/Alert';\nimport CachedIcon from '@material-ui/icons/Cached';\nimport EditIcon from '@material-ui/icons/Edit';\nimport EmailIcon from '@material-ui/icons/Email';\nimport GroupIcon from '@material-ui/icons/Group';\nimport { LinksGroup } from '../../Meta';\n\nconst CardTitle = (props: { title: string }) => (\n  <Box display=\"flex\" alignItems=\"center\">\n    <GroupIcon fontSize=\"inherit\" />\n    <Box ml={1}>{props.title}</Box>\n  </Box>\n);\n\n/** @public */\nexport const GroupProfileCard = (props: {\n  variant?: InfoCardVariants;\n  showLinks?: boolean;\n}) => {\n  const catalogApi = useApi(catalogApiRef);\n  const alertApi = useApi(alertApiRef);\n  const { entity: group } = useEntity<GroupEntity>();\n\n  const refreshEntity = useCallback(async () => {\n    await catalogApi.refreshEntity(stringifyEntityRef(group));\n    alertApi.post({ message: 'Refresh scheduled', severity: 'info' });\n  }, [catalogApi, alertApi, group]);\n\n  if (!group) {\n    return <Alert severity=\"error\">Group not found</Alert>;\n  }\n\n  const {\n    metadata: { name, description, annotations, links },\n    spec: { profile },\n  } = group;\n\n  const childRelations = getEntityRelations(group, RELATION_PARENT_OF, {\n    kind: 'Group',\n  });\n  const parentRelations = getEntityRelations(group, RELATION_CHILD_OF, {\n    kind: 'group',\n  });\n\n  const entityLocation = annotations?.[ANNOTATION_LOCATION];\n  const allowRefresh =\n    entityLocation?.startsWith('url:') || entityLocation?.startsWith('file:');\n\n  const entityMetadataEditUrl =\n    group.metadata.annotations?.[ANNOTATION_EDIT_URL];\n\n  const displayName = profile?.displayName ?? name;\n  const emailHref = profile?.email ? `mailto:${profile.email}` : '#';\n  const infoCardAction = entityMetadataEditUrl ? (\n    <IconButton\n      aria-label=\"Edit\"\n      title=\"Edit Metadata\"\n      component={Link}\n      to={entityMetadataEditUrl}\n    >\n      <EditIcon />\n    </IconButton>\n  ) : (\n    <IconButton aria-label=\"Edit\" disabled title=\"Edit Metadata\">\n      <EditIcon />\n    </IconButton>\n  );\n\n  return (\n    <InfoCard\n      title={<CardTitle title={displayName} />}\n      subheader={description}\n      variant={props.variant}\n      action={\n        <>\n          {allowRefresh && (\n            <IconButton\n              aria-label=\"Refresh\"\n              title=\"Schedule entity refresh\"\n              onClick={refreshEntity}\n            >\n              <CachedIcon />\n            </IconButton>\n          )}\n          {infoCardAction}\n        </>\n      }\n    >\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={2} xl={1}>\n          <Avatar displayName={displayName} picture={profile?.picture} />\n        </Grid>\n        <Grid item md={10} xl={11}>\n          <List>\n            {profile?.email && (\n              <ListItem>\n                <ListItemIcon>\n                  <Tooltip title=\"Email\">\n                    <EmailIcon />\n                  </Tooltip>\n                </ListItemIcon>\n                <ListItemText\n                  primary={<Link to={emailHref}>{profile.email}</Link>}\n                  secondary=\"Email\"\n                />\n              </ListItem>\n            )}\n            <ListItem>\n              <ListItemIcon>\n                <Tooltip title=\"Parent Group\">\n                  <AccountTreeIcon />\n                </Tooltip>\n              </ListItemIcon>\n              <ListItemText\n                primary={\n                  parentRelations.length ? (\n                    <EntityRefLinks\n                      entityRefs={parentRelations}\n                      defaultKind=\"Group\"\n                    />\n                  ) : (\n                    'N/A'\n                  )\n                }\n                secondary=\"Parent Group\"\n              />\n            </ListItem>\n            <ListItem>\n              <ListItemIcon>\n                <Tooltip title=\"Child Groups\">\n                  <GroupIcon />\n                </Tooltip>\n              </ListItemIcon>\n              <ListItemText\n                primary={\n                  childRelations.length ? (\n                    <EntityRefLinks\n                      entityRefs={childRelations}\n                      defaultKind=\"Group\"\n                    />\n                  ) : (\n                    'N/A'\n                  )\n                }\n                secondary=\"Child Groups\"\n              />\n            </ListItem>\n            {props?.showLinks && <LinksGroup links={links} />}\n          </List>\n        </Grid>\n      </Grid>\n    </InfoCard>\n  );\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ANNOTATION_EDIT_URL,\n  RELATION_MEMBER_OF,\n  UserEntity,\n} from '@backstage/catalog-model';\nimport {\n  Avatar,\n  InfoCard,\n  InfoCardVariants,\n  Link,\n} from '@backstage/core-components';\nimport {\n  Box,\n  Grid,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Tooltip,\n} from '@material-ui/core';\nimport {\n  EntityRefLinks,\n  getEntityRelations,\n  useEntity,\n} from '@backstage/plugin-catalog-react';\n\nimport Alert from '@material-ui/lab/Alert';\nimport EditIcon from '@material-ui/icons/Edit';\nimport EmailIcon from '@material-ui/icons/Email';\nimport GroupIcon from '@material-ui/icons/Group';\nimport { LinksGroup } from '../../Meta';\nimport PersonIcon from '@material-ui/icons/Person';\nimport React from 'react';\n\nconst CardTitle = (props: { title?: string }) =>\n  props.title ? (\n    <Box display=\"flex\" alignItems=\"center\">\n      <PersonIcon fontSize=\"inherit\" />\n      <Box ml={1}>{props.title}</Box>\n    </Box>\n  ) : null;\n\n/** @public */\nexport const UserProfileCard = (props: {\n  variant?: InfoCardVariants;\n  showLinks?: boolean;\n}) => {\n  const { entity: user } = useEntity<UserEntity>();\n  if (!user) {\n    return <Alert severity=\"error\">User not found</Alert>;\n  }\n\n  const entityMetadataEditUrl =\n    user.metadata.annotations?.[ANNOTATION_EDIT_URL];\n\n  const {\n    metadata: { name: metaName, description, links },\n    spec: { profile },\n  } = user;\n  const displayName = profile?.displayName ?? metaName;\n  const emailHref = profile?.email ? `mailto:${profile.email}` : undefined;\n  const memberOfRelations = getEntityRelations(user, RELATION_MEMBER_OF, {\n    kind: 'Group',\n  });\n\n  return (\n    <InfoCard\n      title={<CardTitle title={displayName} />}\n      subheader={description}\n      variant={props.variant}\n      action={\n        <>\n          {entityMetadataEditUrl && (\n            <IconButton\n              aria-label=\"Edit\"\n              title=\"Edit Metadata\"\n              component={Link}\n              to={entityMetadataEditUrl}\n            >\n              <EditIcon />\n            </IconButton>\n          )}\n        </>\n      }\n    >\n      <Grid container spacing={3} alignItems=\"flex-start\">\n        <Grid item xs={12} sm={2} xl={1}>\n          <Avatar displayName={displayName} picture={profile?.picture} />\n        </Grid>\n\n        <Grid item md={10} xl={11}>\n          <List>\n            {profile?.email && (\n              <ListItem>\n                <ListItemIcon>\n                  <Tooltip title=\"Email\">\n                    <EmailIcon />\n                  </Tooltip>\n                </ListItemIcon>\n                <ListItemText>\n                  <Link to={emailHref ?? ''}>{profile.email}</Link>\n                </ListItemText>\n              </ListItem>\n            )}\n\n            <ListItem>\n              <ListItemIcon>\n                <Tooltip title=\"Member of\">\n                  <GroupIcon />\n                </Tooltip>\n              </ListItemIcon>\n              <ListItemText>\n                <EntityRefLinks\n                  entityRefs={memberOfRelations}\n                  defaultKind=\"Group\"\n                />\n              </ListItemText>\n            </ListItem>\n\n            {props?.showLinks && <LinksGroup links={links} />}\n          </List>\n        </Grid>\n      </Grid>\n    </InfoCard>\n  );\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Entity,\n  RELATION_MEMBER_OF,\n  RELATION_PARENT_OF,\n  parseEntityRef,\n  stringifyEntityRef,\n} from '@backstage/catalog-model';\nimport {\n  CatalogApi,\n  catalogApiRef,\n  getEntityRelations,\n  humanizeEntityRef,\n} from '@backstage/plugin-catalog-react';\nimport limiterFactory from 'p-limit';\nimport { useApi } from '@backstage/core-plugin-api';\nimport useAsync from 'react-use/lib/useAsync';\nimport qs from 'qs';\n\nconst limiter = limiterFactory(10);\n\ntype EntityTypeProps = {\n  kind: string;\n  type?: string;\n  count: number;\n};\n\nconst getQueryParams = (\n  ownersEntityRef: string[],\n  selectedEntity: EntityTypeProps,\n): string => {\n  const { kind, type } = selectedEntity;\n  const owners = ownersEntityRef.map(owner =>\n    humanizeEntityRef(parseEntityRef(owner), { defaultKind: 'group' }),\n  );\n  const filters = {\n    kind: kind.toLocaleLowerCase('en-US'),\n    type,\n    owners,\n    user: 'all',\n  };\n  return qs.stringify({ filters }, { arrayFormat: 'repeat' });\n};\n\nconst getOwnersEntityRef = (owner: Entity): string[] => {\n  let owners = [stringifyEntityRef(owner)];\n  if (owner.kind === 'User') {\n    const ownerGroups = getEntityRelations(owner, RELATION_MEMBER_OF, {\n      kind: 'Group',\n    });\n    const ownerGroupsName = ownerGroups.map(ownerGroup =>\n      stringifyEntityRef({\n        kind: ownerGroup.kind,\n        namespace: ownerGroup.namespace,\n        name: ownerGroup.name,\n      }),\n    );\n    owners = [...owners, ...ownerGroupsName];\n  }\n  return owners;\n};\n\nconst getAggregatedOwnersEntityRef = async (\n  parentGroup: Entity,\n  catalogApi: CatalogApi,\n): Promise<string[]> => {\n  const requestedEntities: Entity[] = [];\n  const outstandingEntities = new Map<string, Promise<Entity | undefined>>();\n  const processedEntities = new Set<string>();\n  requestedEntities.push(parentGroup);\n  let currentEntity = parentGroup;\n\n  while (requestedEntities.length > 0) {\n    const childRelations = getEntityRelations(\n      currentEntity,\n      RELATION_PARENT_OF,\n      {\n        kind: 'Group',\n      },\n    );\n\n    await Promise.all(\n      childRelations.map(childGroup =>\n        limiter(async () => {\n          const promise = catalogApi.getEntityByRef(childGroup);\n          outstandingEntities.set(childGroup.name, promise);\n          try {\n            const processedEntity = await promise;\n            if (processedEntity) {\n              requestedEntities.push(processedEntity);\n            }\n          } finally {\n            outstandingEntities.delete(childGroup.name);\n          }\n        }),\n      ),\n    );\n    requestedEntities.shift();\n    processedEntities.add(\n      stringifyEntityRef({\n        kind: currentEntity.kind,\n        namespace: currentEntity.metadata.namespace,\n        name: currentEntity.metadata.name,\n      }),\n    );\n    // always set currentEntity to the first element of array requestedEntities\n    currentEntity = requestedEntities[0];\n  }\n\n  return Array.from(processedEntities);\n};\n\nexport function useGetEntities(\n  entity: Entity,\n  relationsType: string,\n  isGroup: boolean,\n  entityFilterKind?: string[],\n): {\n  componentsWithCounters:\n    | {\n        counter: number;\n        type: string;\n        kind: string;\n        queryParams: string;\n      }[]\n    | undefined;\n  loading: boolean;\n  error?: Error;\n} {\n  const catalogApi = useApi(catalogApiRef);\n  const kinds = entityFilterKind ?? ['Component', 'API', 'System'];\n\n  const {\n    loading,\n    error,\n    value: componentsWithCounters,\n  } = useAsync(async () => {\n    const owners =\n      relationsType === 'aggregated' && isGroup\n        ? await getAggregatedOwnersEntityRef(entity, catalogApi)\n        : getOwnersEntityRef(entity);\n    const ownedEntitiesList = await catalogApi.getEntities({\n      filter: [\n        {\n          kind: kinds,\n          'relations.ownedBy': owners,\n        },\n      ],\n      fields: [\n        'kind',\n        'metadata.name',\n        'metadata.namespace',\n        'spec.type',\n        'relations',\n      ],\n    });\n\n    const counts = ownedEntitiesList.items.reduce(\n      (acc: EntityTypeProps[], ownedEntity) => {\n        const match = acc.find(\n          x => x.kind === ownedEntity.kind && x.type === ownedEntity.spec?.type,\n        );\n        if (match) {\n          match.count += 1;\n        } else {\n          acc.push({\n            kind: ownedEntity.kind,\n            type: ownedEntity.spec?.type?.toString(),\n            count: 1,\n          });\n        }\n        return acc;\n      },\n      [],\n    );\n\n    // Return top N (six) entities to be displayed in ownership boxes\n    const topN = counts.sort((a, b) => b.count - a.count).slice(0, 6);\n\n    return topN.map(topOwnedEntity => ({\n      counter: topOwnedEntity.count,\n      type: topOwnedEntity.type,\n      kind: topOwnedEntity.kind,\n      queryParams: getQueryParams(owners, topOwnedEntity),\n    })) as Array<{\n      counter: number;\n      type: string;\n      kind: string;\n      queryParams: string;\n    }>;\n  }, [catalogApi, entity, relationsType]);\n\n  return {\n    componentsWithCounters,\n    loading,\n    error,\n  };\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity } from '@backstage/catalog-model';\nimport { Link, Progress, ResponseErrorPanel } from '@backstage/core-components';\nimport { useRouteRef } from '@backstage/core-plugin-api';\nimport { BackstageTheme } from '@backstage/theme';\nimport {\n  Box,\n  createStyles,\n  Grid,\n  makeStyles,\n  Typography,\n} from '@material-ui/core';\nimport React from 'react';\nimport pluralize from 'pluralize';\nimport { catalogIndexRouteRef } from '../../../routes';\nimport { useGetEntities } from './useGetEntities';\n\nconst useStyles = makeStyles((theme: BackstageTheme) =>\n  createStyles({\n    card: {\n      border: `1px solid ${theme.palette.divider}`,\n      boxShadow: theme.shadows[2],\n      borderRadius: '4px',\n      padding: theme.spacing(2),\n      color: '#fff',\n      transition: `${theme.transitions.duration.standard}ms`,\n      '&:hover': {\n        boxShadow: theme.shadows[4],\n      },\n    },\n    bold: {\n      fontWeight: theme.typography.fontWeightBold,\n    },\n    entityTypeBox: {\n      background: (props: { type: string }) =>\n        theme.getPageTheme({ themeId: props.type }).backgroundImage,\n    },\n  }),\n);\n\nconst EntityCountTile = ({\n  counter,\n  type,\n  kind,\n  url,\n}: {\n  counter: number;\n  type?: string;\n  kind: string;\n  url: string;\n}) => {\n  const classes = useStyles({ type: type ?? kind });\n\n  const rawTitle = type ?? kind;\n\n  return (\n    <Link to={url} variant=\"body2\">\n      <Box\n        className={`${classes.card} ${classes.entityTypeBox}`}\n        display=\"flex\"\n        flexDirection=\"column\"\n        alignItems=\"center\"\n      >\n        <Typography className={classes.bold} variant=\"h6\">\n          {counter}\n        </Typography>\n        <Typography className={classes.bold} variant=\"h6\">\n          {pluralize(rawTitle.toLocaleUpperCase('en-US'), counter)}\n        </Typography>\n        {type && <Typography variant=\"subtitle1\">{kind}</Typography>}\n      </Box>\n    </Link>\n  );\n};\n\nexport const ComponentsGrid = ({\n  entity,\n  relationsType,\n  isGroup,\n  entityFilterKind,\n}: {\n  entity: Entity;\n  relationsType: string;\n  isGroup: boolean;\n  entityFilterKind?: string[];\n}) => {\n  const catalogLink = useRouteRef(catalogIndexRouteRef);\n  const { componentsWithCounters, loading, error } = useGetEntities(\n    entity,\n    relationsType,\n    isGroup,\n    entityFilterKind,\n  );\n\n  if (loading) {\n    return <Progress />;\n  } else if (error) {\n    return <ResponseErrorPanel error={error} />;\n  }\n\n  return (\n    <Grid container>\n      {componentsWithCounters?.map(c => (\n        <Grid item xs={6} md={6} lg={4} key={c.type ?? c.kind}>\n          <EntityCountTile\n            counter={c.counter}\n            kind={c.kind}\n            type={c.type}\n            url={`${catalogLink()}/?${c.queryParams}`}\n          />\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InfoCard, InfoCardVariants } from '@backstage/core-components';\nimport { useEntity } from '@backstage/plugin-catalog-react';\nimport {\n  List,\n  ListItem,\n  ListItemSecondaryAction,\n  ListItemText,\n  makeStyles,\n  Switch,\n  Tooltip,\n} from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { ComponentsGrid } from './ComponentsGrid';\n\nconst useStyles = makeStyles(theme => ({\n  list: {\n    [theme.breakpoints.down('xs')]: {\n      padding: `0 0 12px`,\n    },\n  },\n  listItemText: {\n    [theme.breakpoints.down('xs')]: {\n      paddingRight: 0,\n      paddingLeft: 0,\n    },\n  },\n  listItemSecondaryAction: {\n    [theme.breakpoints.down('xs')]: {\n      width: '100%',\n      top: 'auto',\n      right: 'auto',\n      position: 'relative',\n      transform: 'unset',\n    },\n  },\n}));\n\n/** @public */\nexport const OwnershipCard = (props: {\n  variant?: InfoCardVariants;\n  entityFilterKind?: string[];\n  hideRelationsToggle?: boolean;\n  relationsType?: string;\n}) => {\n  const { variant, entityFilterKind, hideRelationsToggle, relationsType } =\n    props;\n  const relationsToggle =\n    hideRelationsToggle === undefined ? false : hideRelationsToggle;\n  const classes = useStyles();\n  const { entity } = useEntity();\n  const isGroup = entity.kind === 'Group';\n  const [getRelationsType, setRelationsType] = useState(\n    relationsType || 'direct',\n  );\n\n  return (\n    <InfoCard title=\"Ownership\" variant={variant}>\n      {!relationsToggle && (\n        <List dense>\n          <ListItem className={classes.list}>\n            <ListItemText className={classes.listItemText} />\n            <ListItemSecondaryAction\n              className={classes.listItemSecondaryAction}\n            >\n              Direct Relations\n              <Tooltip\n                placement=\"top\"\n                arrow\n                title={`${\n                  getRelationsType === 'direct' ? 'Direct' : 'Aggregated'\n                } Relations`}\n              >\n                <Switch\n                  color=\"primary\"\n                  checked={getRelationsType !== 'direct'}\n                  onChange={() =>\n                    getRelationsType === 'direct'\n                      ? setRelationsType('aggregated')\n                      : setRelationsType('direct')\n                  }\n                  name=\"pin\"\n                  inputProps={{ 'aria-label': 'Ownership Type Switch' }}\n                  disabled={!isGroup}\n                />\n              </Tooltip>\n              Aggregated Relations\n            </ListItemSecondaryAction>\n          </ListItem>\n        </List>\n      )}\n      <ComponentsGrid\n        entity={entity}\n        relationsType={getRelationsType}\n        isGroup={isGroup}\n        entityFilterKind={entityFilterKind}\n      />\n    </InfoCard>\n  );\n};\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport {\n  DEFAULT_NAMESPACE,\n  stringifyEntityRef,\n} from '@backstage/catalog-model';\nimport {\n  SidebarItem,\n  SidebarSubmenu,\n  SidebarSubmenuItem,\n} from '@backstage/core-components';\nimport {\n  IconComponent,\n  identityApiRef,\n  useApi,\n  useRouteRef,\n} from '@backstage/core-plugin-api';\nimport useAsync from 'react-use/lib/useAsync';\nimport {\n  catalogApiRef,\n  CatalogApi,\n  entityRouteRef,\n} from '@backstage/plugin-catalog-react';\nimport { getCompoundEntityRef } from '@backstage/catalog-model';\n\n/**\n * MyGroupsSidebarItem can be added to your sidebar providing quick access to groups the logged in user is a member of\n *\n * @public\n */\nexport const MyGroupsSidebarItem = (props: {\n  singularTitle: string;\n  pluralTitle: string;\n  icon: IconComponent;\n  filter?: Record<string, string | symbol | (string | symbol)[]>;\n}) => {\n  const { singularTitle, pluralTitle, icon, filter } = props;\n\n  const identityApi = useApi(identityApiRef);\n  const catalogApi: CatalogApi = useApi(catalogApiRef);\n  const catalogEntityRoute = useRouteRef(entityRouteRef);\n\n  const { value: groups } = useAsync(async () => {\n    const profile = await identityApi.getBackstageIdentity();\n\n    const response = await catalogApi.getEntities({\n      filter: [\n        {\n          kind: 'group',\n          'relations.hasMember': profile.userEntityRef,\n          ...(filter ?? {}),\n        },\n      ],\n      fields: ['metadata', 'kind'],\n    });\n\n    return response.items;\n  }, []);\n\n  // Not a member of any groups\n  if (!groups?.length) {\n    return null;\n  }\n\n  // Only member of one group\n  if (groups.length === 1) {\n    const group = groups[0];\n    return (\n      <SidebarItem\n        text={singularTitle}\n        to={catalogEntityRoute(getCompoundEntityRef(group))}\n        icon={icon}\n      />\n    );\n  }\n\n  // Member of more than one group\n  return (\n    <SidebarItem icon={icon} text={pluralTitle}>\n      <SidebarSubmenu title={pluralTitle}>\n        {groups?.map(function groupsMap(group) {\n          return (\n            <SidebarSubmenuItem\n              title={group.metadata.title || group.metadata.name}\n              subtitle={\n                group.metadata.namespace !== DEFAULT_NAMESPACE\n                  ? group.metadata.namespace\n                  : undefined\n              }\n              to={catalogEntityRoute(getCompoundEntityRef(group))}\n              icon={icon}\n              key={stringifyEntityRef(group)}\n            />\n          );\n        })}\n      </SidebarSubmenu>\n    </SidebarItem>\n  );\n};\n"],"names":["useStyles","CardTitle","_a"],"mappings":"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"}