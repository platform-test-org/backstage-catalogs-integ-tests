{"version":3,"file":"index.esm.js","sources":["../src/api.ts","../src/apis/StarredEntitiesApi/StarredEntitiesApi.ts","../src/apis/StarredEntitiesApi/MockStarredEntitiesApi.ts","../src/components/CatalogFilterLayout/CatalogFilterLayout.tsx","../src/routes.ts","../src/components/EntityRefLink/humanize.ts","../src/components/EntityRefLink/EntityRefLink.tsx","../src/components/EntityRefLink/FetchedEntityRefLinks.tsx","../src/components/EntityRefLink/EntityRefLinks.tsx","../src/utils/filters.ts","../src/utils/getEntityRelations.ts","../src/utils/getEntitySourceLocation.ts","../src/utils/isOwnerOf.ts","../src/filters.ts","../src/hooks/useEntity.tsx","../src/hooks/useEntityListProvider.tsx","../src/hooks/useEntityTypeFilter.tsx","../src/hooks/useRelatedEntities.ts","../src/hooks/useStarredEntities.ts","../src/hooks/useStarredEntity.ts","../src/hooks/useEntityOwnership.ts","../src/hooks/useEntityPermission.ts","../src/components/EntityKindPicker/EntityKindPicker.tsx","../src/components/EntityLifecyclePicker/EntityLifecyclePicker.tsx","../src/components/EntityOwnerPicker/EntityOwnerPicker.tsx","../src/components/EntitySearchBar/EntitySearchBar.tsx","../src/components/EntityTable/columns.tsx","../src/components/EntityTable/presets.tsx","../src/components/EntityTable/EntityTable.tsx","../src/components/EntityTagPicker/EntityTagPicker.tsx","../src/components/EntityTypePicker/EntityTypePicker.tsx","../src/components/FavoriteEntity/FavoriteEntity.tsx","../src/components/InspectEntityDialog/components/EntityKindIcon.tsx","../src/components/InspectEntityDialog/components/AncestryPage.tsx","../src/components/InspectEntityDialog/components/common.tsx","../src/components/InspectEntityDialog/components/ColocatedPage.tsx","../src/components/InspectEntityDialog/components/util.ts","../src/components/InspectEntityDialog/components/JsonPage.tsx","../src/components/InspectEntityDialog/components/OverviewPage.tsx","../src/components/InspectEntityDialog/components/YamlPage.tsx","../src/components/InspectEntityDialog/InspectEntityDialog.tsx","../src/components/UnregisterEntityDialog/useUnregisterEntityDialogState.ts","../src/components/UnregisterEntityDialog/UnregisterEntityDialog.tsx","../src/components/UserListPicker/UserListPicker.tsx","../src/components/EntityProcessingStatusPicker/EntityProcessingStatusPicker.tsx","../src/testUtils/providers.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CatalogApi } from '@backstage/catalog-client';\nimport { createApiRef } from '@backstage/core-plugin-api';\n\n/**\n * The API reference for the {@link @backstage/catalog-client#CatalogApi}.\n * @public\n */\nexport const catalogApiRef = createApiRef<CatalogApi>({\n  id: 'plugin.catalog.service',\n});\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ApiRef, createApiRef } from '@backstage/core-plugin-api';\nimport { Observable } from '@backstage/types';\n\n/**\n * An API to store starred entities\n *\n * @public\n */\nexport const starredEntitiesApiRef: ApiRef<StarredEntitiesApi> = createApiRef({\n  id: 'catalog-react.starred-entities',\n});\n\n/**\n * An API to store and retrieve starred entities\n *\n * @public\n */\nexport interface StarredEntitiesApi {\n  /**\n   * Toggle the star state of the entity\n   *\n   * @param entityRef - an entity reference to toggle\n   */\n  toggleStarred(entityRef: string): Promise<void>;\n\n  /**\n   * Observe the set of starred entity references.\n   */\n  starredEntitie$(): Observable<Set<string>>;\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Observable } from '@backstage/types';\nimport ObservableImpl from 'zen-observable';\nimport { StarredEntitiesApi } from './StarredEntitiesApi';\n\n/**\n * An in-memory mock implementation of the StarredEntitiesApi.\n *\n * @public\n */\nexport class MockStarredEntitiesApi implements StarredEntitiesApi {\n  private readonly starredEntities = new Set<string>();\n  private readonly subscribers = new Set<\n    ZenObservable.SubscriptionObserver<Set<string>>\n  >();\n\n  private readonly observable = new ObservableImpl<Set<string>>(subscriber => {\n    subscriber.next(new Set(this.starredEntities));\n\n    this.subscribers.add(subscriber);\n    return () => {\n      this.subscribers.delete(subscriber);\n    };\n  });\n\n  async toggleStarred(entityRef: string): Promise<void> {\n    if (!this.starredEntities.delete(entityRef)) {\n      this.starredEntities.add(entityRef);\n    }\n\n    for (const subscription of this.subscribers) {\n      subscription.next(new Set(this.starredEntities));\n    }\n  }\n\n  starredEntitie$(): Observable<Set<string>> {\n    return this.observable;\n  }\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useState } from 'react';\nimport {\n  Box,\n  Button,\n  Drawer,\n  Grid,\n  Typography,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport { BackstageTheme } from '@backstage/theme';\n\n/** @public */\nexport const Filters = (props: { children: React.ReactNode }) => {\n  const isMidSizeScreen = useMediaQuery<BackstageTheme>(theme =>\n    theme.breakpoints.down('md'),\n  );\n  const theme = useTheme<BackstageTheme>();\n  const [filterDrawerOpen, setFilterDrawerOpen] = useState<boolean>(false);\n\n  return isMidSizeScreen ? (\n    <>\n      <Button\n        style={{ marginTop: theme.spacing(1), marginLeft: theme.spacing(1) }}\n        onClick={() => setFilterDrawerOpen(true)}\n        startIcon={<FilterListIcon />}\n      >\n        Filters\n      </Button>\n      <Drawer\n        open={filterDrawerOpen}\n        onClose={() => setFilterDrawerOpen(false)}\n        anchor=\"left\"\n        disableAutoFocus\n        keepMounted\n        variant=\"temporary\"\n      >\n        <Box m={2}>\n          <Typography\n            variant=\"h6\"\n            component=\"h2\"\n            style={{ marginBottom: theme.spacing(1) }}\n          >\n            Filters\n          </Typography>\n          {props.children}\n        </Box>\n      </Drawer>\n    </>\n  ) : (\n    <Grid item lg={2}>\n      {props.children}\n    </Grid>\n  );\n};\n\n/** @public */\nexport const Content = (props: { children: React.ReactNode }) => {\n  return (\n    <Grid item xs={12} lg={10}>\n      {props.children}\n    </Grid>\n  );\n};\n\n/** @public */\nexport const CatalogFilterLayout = (props: { children: React.ReactNode }) => {\n  return (\n    <Grid container style={{ position: 'relative' }}>\n      {props.children}\n    </Grid>\n  );\n};\n\nCatalogFilterLayout.Filters = Filters;\nCatalogFilterLayout.Content = Content;\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity, DEFAULT_NAMESPACE } from '@backstage/catalog-model';\nimport { createRouteRef } from '@backstage/core-plugin-api';\nimport { getOrCreateGlobalSingleton } from '@backstage/version-bridge';\n\n/**\n * A stable route ref that points to the catalog page for an individual entity.\n *\n * This `RouteRef` can be imported and used directly, and does not need to be referenced\n * via an `ExternalRouteRef`.\n *\n * If you want to replace the `EntityPage` from `@backstage/catalog-plugin` in your app,\n * you need to use the `entityRouteRef` as the mount point instead of your own.\n * @public\n */\nexport const entityRouteRef = getOrCreateGlobalSingleton(\n  'catalog:entity-route-ref',\n  () =>\n    createRouteRef({\n      id: 'catalog:entity',\n      params: ['namespace', 'kind', 'name'],\n    }),\n);\n\n/**\n * Utility function to get suitable route params for entityRoute, given an\n * @public\n */\nexport function entityRouteParams(entity: Entity) {\n  return {\n    kind: entity.kind.toLocaleLowerCase('en-US'),\n    namespace:\n      entity.metadata.namespace?.toLocaleLowerCase('en-US') ??\n      DEFAULT_NAMESPACE,\n    name: entity.metadata.name,\n  } as const;\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Entity,\n  CompoundEntityRef,\n  DEFAULT_NAMESPACE,\n} from '@backstage/catalog-model';\n\n/**\n * @param defaultNamespace - if set to false then namespace is never omitted,\n * if set to string which matches namespace of entity then omitted\n *\n * @public */\nexport function humanizeEntityRef(\n  entityRef: Entity | CompoundEntityRef,\n  opts?: {\n    defaultKind?: string;\n    defaultNamespace?: string | false;\n  },\n) {\n  const defaultKind = opts?.defaultKind;\n  let kind;\n  let namespace;\n  let name;\n\n  if ('metadata' in entityRef) {\n    kind = entityRef.kind;\n    namespace = entityRef.metadata.namespace;\n    name = entityRef.metadata.name;\n  } else {\n    kind = entityRef.kind;\n    namespace = entityRef.namespace;\n    name = entityRef.name;\n  }\n\n  if (namespace === undefined || namespace === '') {\n    namespace = DEFAULT_NAMESPACE;\n  }\n  if (opts?.defaultNamespace !== undefined) {\n    if (opts?.defaultNamespace === namespace) {\n      namespace = undefined;\n    }\n  } else if (namespace === DEFAULT_NAMESPACE) {\n    namespace = undefined;\n  }\n\n  kind = kind.toLocaleLowerCase('en-US');\n  kind =\n    defaultKind && defaultKind.toLocaleLowerCase('en-US') === kind\n      ? undefined\n      : kind;\n  return `${kind ? `${kind}:` : ''}${namespace ? `${namespace}/` : ''}${name}`;\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Entity,\n  CompoundEntityRef,\n  DEFAULT_NAMESPACE,\n  parseEntityRef,\n} from '@backstage/catalog-model';\nimport React, { forwardRef } from 'react';\nimport { entityRouteRef } from '../../routes';\nimport { humanizeEntityRef } from './humanize';\nimport { Link, LinkProps } from '@backstage/core-components';\nimport { useRouteRef } from '@backstage/core-plugin-api';\nimport { Tooltip } from '@material-ui/core';\n\n/**\n * Props for {@link EntityRefLink}.\n *\n * @public\n */\nexport type EntityRefLinkProps = {\n  entityRef: Entity | CompoundEntityRef | string;\n  defaultKind?: string;\n  title?: string;\n  children?: React.ReactNode;\n} & Omit<LinkProps, 'to'>;\n\n/**\n * Shows a clickable link to an entity.\n *\n * @public\n */\nexport const EntityRefLink = forwardRef<any, EntityRefLinkProps>(\n  (props, ref) => {\n    const { entityRef, defaultKind, title, children, ...linkProps } = props;\n    const entityRoute = useRouteRef(entityRouteRef);\n\n    let kind;\n    let namespace;\n    let name;\n\n    if (typeof entityRef === 'string') {\n      const parsed = parseEntityRef(entityRef);\n      kind = parsed.kind;\n      namespace = parsed.namespace;\n      name = parsed.name;\n    } else if ('metadata' in entityRef) {\n      kind = entityRef.kind;\n      namespace = entityRef.metadata.namespace;\n      name = entityRef.metadata.name;\n    } else {\n      kind = entityRef.kind;\n      namespace = entityRef.namespace;\n      name = entityRef.name;\n    }\n\n    kind = kind.toLocaleLowerCase('en-US');\n    namespace = namespace?.toLocaleLowerCase('en-US') ?? DEFAULT_NAMESPACE;\n\n    const routeParams = { kind, namespace, name };\n    const formattedEntityRefTitle = humanizeEntityRef(\n      { kind, namespace, name },\n      { defaultKind },\n    );\n\n    const link = (\n      <Link {...linkProps} ref={ref} to={entityRoute(routeParams)}>\n        {children}\n        {!children && (title ?? formattedEntityRefTitle)}\n      </Link>\n    );\n\n    return title ? (\n      <Tooltip title={formattedEntityRefTitle}>{link}</Tooltip>\n    ) : (\n      link\n    );\n  },\n) as (props: EntityRefLinkProps) => JSX.Element;\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  Entity,\n  CompoundEntityRef,\n  parseEntityRef,\n} from '@backstage/catalog-model';\nimport React from 'react';\nimport { EntityRefLink } from './EntityRefLink';\nimport { ErrorPanel, LinkProps, Progress } from '@backstage/core-components';\nimport useAsync from 'react-use/lib/useAsync';\nimport { catalogApiRef } from '../../api';\nimport { useApi } from '@backstage/core-plugin-api';\n\n/**\n * Props for {@link FetchedEntityRefLinks}.\n *\n * @public\n */\nexport type FetchedEntityRefLinksProps<\n  TRef extends string | CompoundEntityRef | Entity,\n> = {\n  defaultKind?: string;\n  entityRefs: TRef[];\n  getTitle(entity: Entity): string | undefined;\n} & Omit<LinkProps, 'to'>;\n\n/**\n * Shows a list of clickable links to entities with auto-fetching of entities\n * for customising a displayed text via title attribute.\n *\n * @public\n */\nexport function FetchedEntityRefLinks<\n  TRef extends string | CompoundEntityRef | Entity,\n>(props: FetchedEntityRefLinksProps<TRef>) {\n  const { entityRefs, defaultKind, getTitle, ...linkProps } = props;\n\n  const catalogApi = useApi(catalogApiRef);\n\n  const {\n    value: entities = new Array<Entity>(),\n    loading,\n    error,\n  } = useAsync(async () => {\n    const refs = entityRefs.reduce((acc, current) => {\n      return 'metadata' in current ? acc : [...acc, parseEntityRef(current)];\n    }, new Array<CompoundEntityRef>());\n\n    const pureEntities = entityRefs.filter(\n      ref => 'metadata' in ref,\n    ) as Array<Entity>;\n\n    return refs.length > 0\n      ? [\n          ...(\n            await catalogApi.getEntities({\n              filter: refs.map(ref => ({\n                kind: ref.kind,\n                'metadata.namespace': ref.namespace,\n                'metadata.name': ref.name,\n              })),\n            })\n          ).items,\n          ...pureEntities,\n        ]\n      : pureEntities;\n  }, [entityRefs]);\n\n  if (loading) {\n    return <Progress />;\n  }\n\n  if (error) {\n    return <ErrorPanel error={error} />;\n  }\n\n  return (\n    <>\n      {entities.map((r: Entity, i) => {\n        return (\n          <React.Fragment key={i}>\n            {i > 0 && ', '}\n            <EntityRefLink\n              {...linkProps}\n              defaultKind={defaultKind}\n              entityRef={r}\n              title={getTitle(r as Entity)}\n            />\n          </React.Fragment>\n        );\n      })}\n    </>\n  );\n}\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Entity, CompoundEntityRef } from '@backstage/catalog-model';\nimport React from 'react';\nimport { EntityRefLink } from './EntityRefLink';\nimport { LinkProps } from '@backstage/core-components';\nimport { FetchedEntityRefLinks } from './FetchedEntityRefLinks';\n\n/**\n * Props for {@link EntityRefLink}.\n *\n * @public\n */\nexport type EntityRefLinksProps<\n  TRef extends string | CompoundEntityRef | Entity,\n> = (\n  | {\n      defaultKind?: string;\n      entityRefs: TRef[];\n      fetchEntities?: false;\n      getTitle?(entity: TRef): string | undefined;\n    }\n  | {\n      defaultKind?: string;\n      entityRefs: TRef[];\n      fetchEntities: true;\n      getTitle(entity: Entity): string | undefined;\n    }\n) &\n  Omit<LinkProps, 'to'>;\n\n/**\n * Shows a list of clickable links to entities.\n *\n * @public\n */\nexport function EntityRefLinks<\n  TRef extends string | CompoundEntityRef | Entity,\n>(props: EntityRefLinksProps<TRef>) {\n  const { entityRefs, defaultKind, fetchEntities, getTitle, ...linkProps } =\n    props;\n\n  if (fetchEntities) {\n    return (\n      <FetchedEntityRefLinks\n        {...linkProps}\n        defaultKind={defaultKind}\n        entityRefs={entityRefs}\n        getTitle={getTitle}\n      />\n    );\n  }\n\n  return (\n    <>\n      {entityRefs.map((r: TRef, i: number) => {\n        return (\n          <React.Fragment key={i}>\n            {i > 0 && ', '}\n            <EntityRefLink\n              {...linkProps}\n              defaultKind={defaultKind}\n              entityRef={r}\n              title={getTitle ? getTitle(r) : undefined}\n            />\n          </React.Fragment>\n        );\n      })}\n    </>\n  );\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity } from '@backstage/catalog-model';\nimport { EntityFilter } from '../types';\n\nexport function reduceCatalogFilters(\n  filters: EntityFilter[],\n): Record<string, string | symbol | (string | symbol)[]> {\n  return filters.reduce((compoundFilter, filter) => {\n    return {\n      ...compoundFilter,\n      ...(filter.getCatalogFilters ? filter.getCatalogFilters() : {}),\n    };\n  }, {} as Record<string, string | symbol | (string | symbol)[]>);\n}\n\nexport function reduceEntityFilters(\n  filters: EntityFilter[],\n): (entity: Entity) => boolean {\n  return (entity: Entity) =>\n    filters.every(\n      filter => !filter.filterEntity || filter.filterEntity(entity),\n    );\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Entity,\n  CompoundEntityRef,\n  parseEntityRef,\n} from '@backstage/catalog-model';\n\n// TODO(freben): This should be returning entity refs instead\n/**\n * Get the related entity references.\n *\n * @public\n */\nexport function getEntityRelations(\n  entity: Entity | undefined,\n  relationType: string,\n  filter?: { kind: string },\n): CompoundEntityRef[] {\n  let entityNames =\n    entity?.relations\n      ?.filter(r => r.type === relationType)\n      .map(r => parseEntityRef(r.targetRef)) || [];\n\n  if (filter?.kind) {\n    entityNames = entityNames.filter(\n      e =>\n        e.kind.toLocaleLowerCase('en-US') ===\n        filter.kind.toLocaleLowerCase('en-US'),\n    );\n  }\n\n  return entityNames;\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ANNOTATION_SOURCE_LOCATION,\n  Entity,\n  parseLocationRef,\n} from '@backstage/catalog-model';\nimport { ScmIntegrationRegistry } from '@backstage/integration';\n\n/** @public */\nexport type EntitySourceLocation = {\n  locationTargetUrl: string;\n  integrationType?: string;\n};\n\n/** @public */\nexport function getEntitySourceLocation(\n  entity: Entity,\n  scmIntegrationsApi: ScmIntegrationRegistry,\n): EntitySourceLocation | undefined {\n  const sourceLocation =\n    entity.metadata.annotations?.[ANNOTATION_SOURCE_LOCATION];\n\n  if (!sourceLocation) {\n    return undefined;\n  }\n\n  try {\n    const sourceLocationRef = parseLocationRef(sourceLocation);\n    const integration = scmIntegrationsApi.byUrl(sourceLocationRef.target);\n    return {\n      locationTargetUrl: sourceLocationRef.target,\n      integrationType: integration?.type,\n    };\n  } catch {\n    return undefined;\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Entity,\n  getCompoundEntityRef,\n  RELATION_MEMBER_OF,\n  RELATION_OWNED_BY,\n  stringifyEntityRef,\n} from '@backstage/catalog-model';\nimport { getEntityRelations } from './getEntityRelations';\n\n/**\n * Returns true if the `owner` argument is a direct owner on the `entity` argument.\n *\n * @alpha\n * @remarks\n *\n * Note that this ownership is not the same as using the claims in the auth-resolver, it only will take into account ownership as expressed by direct entity relations.\n * It doesn't know anything about the additional groups that a user might belong to which the claims contain.\n */\nexport function isOwnerOf(owner: Entity, entity: Entity) {\n  const possibleOwners = new Set(\n    [\n      ...getEntityRelations(owner, RELATION_MEMBER_OF, { kind: 'group' }),\n      ...(owner ? [getCompoundEntityRef(owner)] : []),\n    ].map(stringifyEntityRef),\n  );\n\n  const owners = getEntityRelations(entity, RELATION_OWNED_BY).map(\n    stringifyEntityRef,\n  );\n\n  for (const ownerItem of owners) {\n    if (possibleOwners.has(ownerItem)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AlphaEntity,\n  Entity,\n  RELATION_OWNED_BY,\n} from '@backstage/catalog-model';\nimport { humanizeEntityRef } from './components/EntityRefLink';\nimport { EntityFilter, UserListFilterKind } from './types';\nimport { getEntityRelations } from './utils';\n\n/**\n * Filter entities based on Kind.\n * @public\n */\nexport class EntityKindFilter implements EntityFilter {\n  constructor(readonly value: string) {}\n\n  getCatalogFilters(): Record<string, string | string[]> {\n    return { kind: this.value };\n  }\n\n  toQueryValue(): string {\n    return this.value;\n  }\n}\n\n/**\n * Filters entities based on type\n * @public\n */\nexport class EntityTypeFilter implements EntityFilter {\n  constructor(readonly value: string | string[]) {}\n\n  // Simplify `string | string[]` for consumers, always returns an array\n  getTypes(): string[] {\n    return Array.isArray(this.value) ? this.value : [this.value];\n  }\n\n  getCatalogFilters(): Record<string, string | string[]> {\n    return { 'spec.type': this.getTypes() };\n  }\n\n  toQueryValue(): string[] {\n    return this.getTypes();\n  }\n}\n\n/**\n * Filters entities based on tag.\n * @public\n */\nexport class EntityTagFilter implements EntityFilter {\n  constructor(readonly values: string[]) {}\n\n  filterEntity(entity: Entity): boolean {\n    return this.values.every(v => (entity.metadata.tags ?? []).includes(v));\n  }\n\n  toQueryValue(): string[] {\n    return this.values;\n  }\n}\n\n/**\n * Filters entities where the text matches spec, title or tags.\n * @public\n */\nexport class EntityTextFilter implements EntityFilter {\n  constructor(readonly value: string) {}\n\n  filterEntity(entity: Entity): boolean {\n    const words = this.toUpperArray(this.value.split(/\\s/));\n    const exactMatch = this.toUpperArray([entity.metadata.tags]);\n    const partialMatch = this.toUpperArray([\n      entity.metadata.name,\n      entity.metadata.title,\n    ]);\n\n    for (const word of words) {\n      if (\n        exactMatch.every(m => m !== word) &&\n        partialMatch.every(m => !m.includes(word))\n      ) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  private toUpperArray(\n    value: Array<string | string[] | undefined>,\n  ): Array<string> {\n    return value\n      .flat()\n      .filter((m): m is string => Boolean(m))\n      .map(m => m.toLocaleUpperCase('en-US'));\n  }\n}\n\n/**\n * Filter matching entities that are owned by group.\n * @public\n */\nexport class EntityOwnerFilter implements EntityFilter {\n  constructor(readonly values: string[]) {}\n\n  filterEntity(entity: Entity): boolean {\n    return this.values.some(v =>\n      getEntityRelations(entity, RELATION_OWNED_BY).some(\n        o => humanizeEntityRef(o, { defaultKind: 'group' }) === v,\n      ),\n    );\n  }\n\n  toQueryValue(): string[] {\n    return this.values;\n  }\n}\n\n/**\n * Filters entities on lifecycle.\n * @public\n */\nexport class EntityLifecycleFilter implements EntityFilter {\n  constructor(readonly values: string[]) {}\n\n  filterEntity(entity: Entity): boolean {\n    return this.values.some(v => entity.spec?.lifecycle === v);\n  }\n\n  toQueryValue(): string[] {\n    return this.values;\n  }\n}\n\n/**\n * Filters entities based on whatever the user has starred or owns them.\n * @public\n */\nexport class UserListFilter implements EntityFilter {\n  constructor(\n    readonly value: UserListFilterKind,\n    readonly isOwnedEntity: (entity: Entity) => boolean,\n    readonly isStarredEntity: (entity: Entity) => boolean,\n  ) {}\n\n  filterEntity(entity: Entity): boolean {\n    switch (this.value) {\n      case 'owned':\n        return this.isOwnedEntity(entity);\n      case 'starred':\n        return this.isStarredEntity(entity);\n      default:\n        return true;\n    }\n  }\n\n  toQueryValue(): string {\n    return this.value;\n  }\n}\n\n/**\n * Filters entities based if it is an orphan or not.\n * @public\n */\nexport class EntityOrphanFilter implements EntityFilter {\n  constructor(readonly value: boolean) {}\n  filterEntity(entity: Entity): boolean {\n    const orphan = entity.metadata.annotations?.['backstage.io/orphan'];\n    return orphan !== undefined && this.value.toString() === orphan;\n  }\n}\n\n/**\n * Filters entities based on if it has errors or not.\n * @public\n */\nexport class EntityErrorFilter implements EntityFilter {\n  constructor(readonly value: boolean) {}\n  filterEntity(entity: Entity): boolean {\n    const error =\n      ((entity as AlphaEntity)?.status?.items?.length as number) > 0;\n    return error !== undefined && this.value === error;\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Entity, stringifyEntityRef } from '@backstage/catalog-model';\nimport { AnalyticsContext } from '@backstage/core-plugin-api';\nimport {\n  createVersionedContext,\n  createVersionedValueMap,\n  useVersionedContext,\n} from '@backstage/version-bridge';\nimport React, { ReactNode } from 'react';\n\n/** @public */\nexport type EntityLoadingStatus<TEntity extends Entity = Entity> = {\n  entity?: TEntity;\n  loading: boolean;\n  error?: Error;\n  refresh?: VoidFunction;\n};\n\n// This context has support for multiple concurrent versions of this package.\n// It is currently used in parallel with the old context in order to provide\n// a smooth transition, but will eventually be the only context we use.\nconst NewEntityContext = createVersionedContext<{ 1: EntityLoadingStatus }>(\n  'entity-context',\n);\n\n/**\n * Properties for the AsyncEntityProvider component.\n *\n * @public\n */\nexport interface AsyncEntityProviderProps {\n  children: ReactNode;\n  entity?: Entity;\n  loading: boolean;\n  error?: Error;\n  refresh?: VoidFunction;\n}\n\n/**\n * Provides a loaded entity to be picked up by the `useEntity` hook.\n *\n * @public\n */\nexport const AsyncEntityProvider = ({\n  children,\n  entity,\n  loading,\n  error,\n  refresh,\n}: AsyncEntityProviderProps) => {\n  const value = { entity, loading, error, refresh };\n  // We provide both the old and the new context, since\n  // consumers might be doing things like `useContext(EntityContext)`\n  return (\n    <NewEntityContext.Provider value={createVersionedValueMap({ 1: value })}>\n      <AnalyticsContext\n        attributes={{\n          ...(entity ? { entityRef: stringifyEntityRef(entity) } : undefined),\n        }}\n      >\n        {children}\n      </AnalyticsContext>\n    </NewEntityContext.Provider>\n  );\n};\n\n/**\n * Properties for the EntityProvider component.\n *\n * @public\n */\nexport interface EntityProviderProps {\n  children: ReactNode;\n  entity?: Entity;\n}\n\n/**\n * Provides an entity to be picked up by the `useEntity` hook.\n *\n * @public\n */\nexport const EntityProvider = (props: EntityProviderProps) => (\n  <AsyncEntityProvider\n    entity={props.entity}\n    loading={!Boolean(props.entity)}\n    error={undefined}\n    refresh={undefined}\n    children={props.children}\n  />\n);\n\n/**\n * Grab the current entity from the context, throws if the entity has not yet been loaded\n * or is not available.\n *\n * @public\n */\nexport function useEntity<TEntity extends Entity = Entity>(): {\n  entity: TEntity;\n} {\n  const versionedHolder = useVersionedContext<{ 1: EntityLoadingStatus }>(\n    'entity-context',\n  );\n\n  if (!versionedHolder) {\n    throw new Error('Entity context is not available');\n  }\n\n  const value = versionedHolder.atVersion(1);\n  if (!value) {\n    throw new Error('EntityContext v1 not available');\n  }\n\n  if (!value.entity) {\n    throw new Error(\n      'useEntity hook is being called outside of an EntityLayout where the entity has not been loaded. If this is intentional, please use useAsyncEntity instead.',\n    );\n  }\n\n  return { entity: value.entity as TEntity };\n}\n\n/**\n * Grab the current entity from the context, provides loading state and errors, and the ability to refresh.\n *\n * @public\n */\nexport function useAsyncEntity<\n  TEntity extends Entity = Entity,\n>(): EntityLoadingStatus<TEntity> {\n  const versionedHolder = useVersionedContext<{ 1: EntityLoadingStatus }>(\n    'entity-context',\n  );\n\n  if (!versionedHolder) {\n    throw new Error('Entity context is not available');\n  }\n  const value = versionedHolder.atVersion(1);\n  if (!value) {\n    throw new Error('EntityContext v1 not available');\n  }\n\n  const { entity, loading, error, refresh } = value;\n  return { entity: entity as TEntity, loading, error, refresh };\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity } from '@backstage/catalog-model';\nimport { compact, isEqual } from 'lodash';\nimport qs from 'qs';\nimport React, {\n  createContext,\n  PropsWithChildren,\n  useCallback,\n  useContext,\n  useMemo,\n  useState,\n} from 'react';\nimport { useLocation } from 'react-router';\nimport useAsyncFn from 'react-use/lib/useAsyncFn';\nimport useDebounce from 'react-use/lib/useDebounce';\nimport useMountedState from 'react-use/lib/useMountedState';\nimport { catalogApiRef } from '../api';\nimport {\n  EntityErrorFilter,\n  EntityKindFilter,\n  EntityLifecycleFilter,\n  EntityOrphanFilter,\n  EntityOwnerFilter,\n  EntityTagFilter,\n  EntityTextFilter,\n  EntityTypeFilter,\n  UserListFilter,\n} from '../filters';\nimport { EntityFilter } from '../types';\nimport { reduceCatalogFilters, reduceEntityFilters } from '../utils';\nimport { useApi } from '@backstage/core-plugin-api';\n\n/** @public */\nexport type DefaultEntityFilters = {\n  kind?: EntityKindFilter;\n  type?: EntityTypeFilter;\n  user?: UserListFilter;\n  owners?: EntityOwnerFilter;\n  lifecycles?: EntityLifecycleFilter;\n  tags?: EntityTagFilter;\n  text?: EntityTextFilter;\n  orphan?: EntityOrphanFilter;\n  error?: EntityErrorFilter;\n};\n\n/** @public */\nexport type EntityListContextProps<\n  EntityFilters extends DefaultEntityFilters = DefaultEntityFilters,\n> = {\n  /**\n   * The currently registered filters, adhering to the shape of DefaultEntityFilters or an extension\n   * of that default (to add custom filter types).\n   */\n  filters: EntityFilters;\n\n  /**\n   * The resolved list of catalog entities, after all filters are applied.\n   */\n  entities: Entity[];\n\n  /**\n   * The resolved list of catalog entities, after _only catalog-backend_ filters are applied.\n   */\n  backendEntities: Entity[];\n\n  /**\n   * Update one or more of the registered filters. Optional filters can be set to `undefined` to\n   * reset the filter.\n   */\n  updateFilters: (\n    filters:\n      | Partial<EntityFilters>\n      | ((prevFilters: EntityFilters) => Partial<EntityFilters>),\n  ) => void;\n\n  /**\n   * Filter values from query parameters.\n   */\n  queryParameters: Partial<Record<keyof EntityFilters, string | string[]>>;\n\n  loading: boolean;\n  error?: Error;\n};\n\n/**\n * Creates new context for entity listing and filtering.\n * @public\n */\nexport const EntityListContext = createContext<\n  EntityListContextProps<any> | undefined\n>(undefined);\n\ntype OutputState<EntityFilters extends DefaultEntityFilters> = {\n  appliedFilters: EntityFilters;\n  entities: Entity[];\n  backendEntities: Entity[];\n};\n\n/**\n * Provides entities and filters for a catalog listing.\n * @public\n */\nexport const EntityListProvider = <EntityFilters extends DefaultEntityFilters>({\n  children,\n}: PropsWithChildren<{}>) => {\n  const isMounted = useMountedState();\n  const catalogApi = useApi(catalogApiRef);\n  const [requestedFilters, setRequestedFilters] = useState<EntityFilters>(\n    {} as EntityFilters,\n  );\n\n  // We use react-router's useLocation hook so updates from external sources trigger an update to\n  // the queryParameters in outputState. Updates from this hook use replaceState below and won't\n  // trigger a useLocation change; this would instead come from an external source, such as a manual\n  // update of the URL or two catalog sidebar links with different catalog filters.\n  const location = useLocation();\n  const queryParameters = useMemo(\n    () =>\n      (qs.parse(location.search, {\n        ignoreQueryPrefix: true,\n      }).filters ?? {}) as Record<string, string | string[]>,\n    [location],\n  );\n\n  const [outputState, setOutputState] = useState<OutputState<EntityFilters>>(\n    () => {\n      return {\n        appliedFilters: {} as EntityFilters,\n        entities: [],\n        backendEntities: [],\n      };\n    },\n  );\n\n  // The main async filter worker. Note that while it has a lot of dependencies\n  // in terms of its implementation, the triggering only happens (debounced)\n  // based on the requested filters changing.\n  const [{ loading, error }, refresh] = useAsyncFn(\n    async () => {\n      const compacted = compact(Object.values(requestedFilters));\n      const entityFilter = reduceEntityFilters(compacted);\n      const backendFilter = reduceCatalogFilters(compacted);\n      const previousBackendFilter = reduceCatalogFilters(\n        compact(Object.values(outputState.appliedFilters)),\n      );\n\n      const queryParams = Object.keys(requestedFilters).reduce(\n        (params, key) => {\n          const filter: EntityFilter | undefined =\n            requestedFilters[key as keyof EntityFilters];\n          if (filter?.toQueryValue) {\n            params[key] = filter.toQueryValue();\n          }\n          return params;\n        },\n        {} as Record<string, string | string[]>,\n      );\n\n      // TODO(mtlewis): currently entities will never be requested unless\n      // there's at least one filter, we should allow an initial request\n      // to happen with no filters.\n      if (!isEqual(previousBackendFilter, backendFilter)) {\n        // TODO(timbonicus): should limit fields here, but would need filter\n        // fields + table columns\n        const response = await catalogApi.getEntities({\n          filter: backendFilter,\n        });\n        setOutputState({\n          appliedFilters: requestedFilters,\n          backendEntities: response.items,\n          entities: response.items.filter(entityFilter),\n        });\n      } else {\n        setOutputState({\n          appliedFilters: requestedFilters,\n          backendEntities: outputState.backendEntities,\n          entities: outputState.backendEntities.filter(entityFilter),\n        });\n      }\n\n      if (isMounted()) {\n        const oldParams = qs.parse(location.search, {\n          ignoreQueryPrefix: true,\n        });\n        const newParams = qs.stringify(\n          { ...oldParams, filters: queryParams },\n          { addQueryPrefix: true, arrayFormat: 'repeat' },\n        );\n        const newUrl = `${window.location.pathname}${newParams}`;\n        // We use direct history manipulation since useSearchParams and\n        // useNavigate in react-router-dom cause unnecessary extra rerenders.\n        // Also make sure to replace the state rather than pushing, since we\n        // don't want there to be back/forward slots for every single filter\n        // change.\n        window.history?.replaceState(null, document.title, newUrl);\n      }\n    },\n    [catalogApi, queryParameters, requestedFilters, outputState],\n    { loading: true },\n  );\n\n  // Slight debounce on the refresh, since (especially on page load) several\n  // filters will be calling this in rapid succession.\n  useDebounce(refresh, 10, [requestedFilters]);\n\n  const updateFilters = useCallback(\n    (\n      update:\n        | Partial<EntityFilter>\n        | ((prevFilters: EntityFilters) => Partial<EntityFilters>),\n    ) => {\n      setRequestedFilters(prevFilters => {\n        const newFilters =\n          typeof update === 'function' ? update(prevFilters) : update;\n        return { ...prevFilters, ...newFilters };\n      });\n    },\n    [],\n  );\n\n  const value = useMemo(\n    () => ({\n      filters: outputState.appliedFilters,\n      entities: outputState.entities,\n      backendEntities: outputState.backendEntities,\n      updateFilters,\n      queryParameters,\n      loading,\n      error,\n    }),\n    [outputState, updateFilters, queryParameters, loading, error],\n  );\n\n  return (\n    <EntityListContext.Provider value={value}>\n      {children}\n    </EntityListContext.Provider>\n  );\n};\n\n/**\n * Hook for interacting with the entity list context provided by the {@link EntityListProvider}.\n * @public\n */\nexport function useEntityList<\n  EntityFilters extends DefaultEntityFilters = DefaultEntityFilters,\n>(): EntityListContextProps<EntityFilters> {\n  const context = useContext(EntityListContext);\n  if (!context)\n    throw new Error('useEntityList must be used within EntityListProvider');\n  return context;\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { useEffect, useMemo, useRef, useState } from 'react';\nimport useAsync from 'react-use/lib/useAsync';\nimport isEqual from 'lodash/isEqual';\nimport sortBy from 'lodash/sortBy';\nimport { useApi } from '@backstage/core-plugin-api';\nimport { catalogApiRef } from '../api';\nimport { useEntityList } from './useEntityListProvider';\nimport { EntityTypeFilter } from '../filters';\n\n/**\n * A hook built on top of `useEntityList` for enabling selection of valid `spec.type` values\n * based on the selected EntityKindFilter.\n * @public\n */\nexport function useEntityTypeFilter(): {\n  loading: boolean;\n  error?: Error;\n  availableTypes: string[];\n  selectedTypes: string[];\n  setSelectedTypes: (types: string[]) => void;\n} {\n  const catalogApi = useApi(catalogApiRef);\n  const {\n    filters: { kind: kindFilter, type: typeFilter },\n    queryParameters: { type: typeParameter },\n    updateFilters,\n  } = useEntityList();\n\n  const flattenedQueryTypes = useMemo(\n    () => [typeParameter].flat().filter(Boolean) as string[],\n    [typeParameter],\n  );\n\n  const [selectedTypes, setSelectedTypes] = useState(\n    flattenedQueryTypes.length\n      ? flattenedQueryTypes\n      : typeFilter?.getTypes() ?? [],\n  );\n\n  // Set selected types on query parameter updates; this happens at initial page load and from\n  // external updates to the page location.\n  useEffect(() => {\n    if (flattenedQueryTypes.length) {\n      setSelectedTypes(flattenedQueryTypes);\n    }\n  }, [flattenedQueryTypes]);\n\n  const [availableTypes, setAvailableTypes] = useState<string[]>([]);\n  const kind = useMemo(() => kindFilter?.value, [kindFilter]);\n\n  // Load all valid spec.type values straight from the catalogApi, paying attention to only the\n  // kind filter for a complete list.\n  const {\n    error,\n    loading,\n    value: facets,\n  } = useAsync(async () => {\n    if (kind) {\n      const items = await catalogApi\n        .getEntityFacets({\n          filter: { kind },\n          facets: ['spec.type'],\n        })\n        .then(response => response.facets['spec.type'] || []);\n      return items;\n    }\n    return [];\n  }, [kind, catalogApi]);\n\n  const facetsRef = useRef(facets);\n  useEffect(() => {\n    const oldFacets = facetsRef.current;\n    facetsRef.current = facets;\n    // Delay processing hook until kind and facets load updates have settled to generate list of types;\n    // This prevents resetting the type filter due to saved type value from query params not matching the\n    // empty set of type values while values are still being loaded; also only run this hook on changes\n    // to facets\n    if (loading || !kind || oldFacets === facets || !facets) {\n      return;\n    }\n\n    // Sort by facet count descending, so the most common types appear on top\n    const newTypes = [\n      ...new Set(\n        sortBy(facets, f => -f.count).map(f =>\n          f.value.toLocaleLowerCase('en-US'),\n        ),\n      ),\n    ];\n    setAvailableTypes(newTypes);\n\n    // Update type filter to only valid values when the list of available types has changed\n    const stillValidTypes = selectedTypes.filter(value =>\n      newTypes.includes(value),\n    );\n    if (!isEqual(selectedTypes, stillValidTypes)) {\n      setSelectedTypes(stillValidTypes);\n    }\n  }, [loading, kind, selectedTypes, setSelectedTypes, facets]);\n\n  useEffect(() => {\n    updateFilters({\n      type: selectedTypes.length\n        ? new EntityTypeFilter(selectedTypes)\n        : undefined,\n    });\n  }, [selectedTypes, updateFilters]);\n\n  return {\n    loading,\n    error,\n    availableTypes,\n    selectedTypes,\n    setSelectedTypes,\n  };\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Entity, parseEntityRef } from '@backstage/catalog-model';\nimport { useApi } from '@backstage/core-plugin-api';\nimport { chunk, groupBy } from 'lodash';\nimport useAsync from 'react-use/lib/useAsync';\nimport { catalogApiRef } from '../api';\n\nconst BATCH_SIZE = 20;\n\n/** @public */\nexport function useRelatedEntities(\n  entity: Entity,\n  relationFilter: { type?: string; kind?: string },\n): {\n  entities: Entity[] | undefined;\n  loading: boolean;\n  error: Error | undefined;\n} {\n  const filterByTypeLower = relationFilter?.type?.toLocaleLowerCase('en-US');\n  const filterByKindLower = relationFilter?.kind?.toLocaleLowerCase('en-US');\n\n  const catalogApi = useApi(catalogApiRef);\n  const {\n    loading,\n    value: entities,\n    error,\n  } = useAsync(async () => {\n    const relations = entity.relations\n      ?.map(r => ({ type: r.type, target: parseEntityRef(r.targetRef) }))\n      .filter(\n        r =>\n          (!filterByTypeLower ||\n            r.type.toLocaleLowerCase('en-US') === filterByTypeLower) &&\n          (!filterByKindLower || r.target.kind === filterByKindLower),\n      );\n\n    if (!relations) {\n      return [];\n    }\n\n    // Group the relations by kind and namespace to reduce the size of the request query string.\n    // Without this grouping, the kind and namespace would need to be specified for each relation, e.g.\n    // `filter=kind=component,namespace=default,name=example1&filter=kind=component,namespace=default,name=example2`\n    // with grouping, we can generate a query a string like\n    // `filter=kind=component,namespace=default,name=example1,example2`\n    const relationsByKindAndNamespace = Object.values(\n      groupBy(relations, ({ target }) => {\n        return `${target.kind}:${target.namespace}`.toLocaleLowerCase('en-US');\n      }),\n    );\n\n    // Split the names within each group into batches to further reduce the query string length.\n    const batchedRelationsByKindAndNamespace: {\n      kind: string;\n      namespace: string;\n      nameBatches: string[][];\n    }[] = [];\n    for (const rs of relationsByKindAndNamespace) {\n      batchedRelationsByKindAndNamespace.push({\n        // All relations in a group have the same kind and namespace, so its arbitrary which we pick\n        kind: rs[0].target.kind,\n        namespace: rs[0].target.namespace,\n        nameBatches: chunk(\n          rs.map(r => r.target.name),\n          BATCH_SIZE,\n        ),\n      });\n    }\n\n    const results = await Promise.all(\n      batchedRelationsByKindAndNamespace.flatMap(rs => {\n        return rs.nameBatches.map(names => {\n          return catalogApi.getEntities({\n            filter: {\n              kind: rs.kind,\n              'metadata.namespace': rs.namespace,\n              'metadata.name': names,\n            },\n          });\n        });\n      }),\n    );\n\n    return results.flatMap(r => r.items);\n  }, [entity, filterByTypeLower, filterByKindLower]);\n\n  return {\n    entities,\n    loading,\n    error,\n  };\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Entity,\n  CompoundEntityRef,\n  stringifyEntityRef,\n} from '@backstage/catalog-model';\nimport { useApi } from '@backstage/core-plugin-api';\nimport { useCallback } from 'react';\nimport useObservable from 'react-use/lib/useObservable';\nimport { starredEntitiesApiRef } from '../apis';\n\nfunction getEntityRef(\n  entityOrRef: Entity | CompoundEntityRef | string,\n): string {\n  return typeof entityOrRef === 'string'\n    ? entityOrRef\n    : stringifyEntityRef(entityOrRef);\n}\n\n/** @public */\nexport function useStarredEntities(): {\n  starredEntities: Set<string>;\n  toggleStarredEntity: (\n    entityOrRef: Entity | CompoundEntityRef | string,\n  ) => void;\n  isStarredEntity: (\n    entityOrRef: Entity | CompoundEntityRef | string,\n  ) => boolean;\n} {\n  const starredEntitiesApi = useApi(starredEntitiesApiRef);\n\n  const starredEntities = useObservable(\n    starredEntitiesApi.starredEntitie$(),\n    new Set<string>(),\n  );\n\n  const isStarredEntity = useCallback(\n    (entityOrRef: Entity | CompoundEntityRef | string) =>\n      starredEntities.has(getEntityRef(entityOrRef)),\n    [starredEntities],\n  );\n\n  const toggleStarredEntity = useCallback(\n    (entityOrRef: Entity | CompoundEntityRef | string) =>\n      starredEntitiesApi.toggleStarred(getEntityRef(entityOrRef)).then(),\n    [starredEntitiesApi],\n  );\n\n  return {\n    starredEntities,\n    toggleStarredEntity,\n    isStarredEntity,\n  };\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Entity,\n  CompoundEntityRef,\n  stringifyEntityRef,\n} from '@backstage/catalog-model';\nimport { useApi } from '@backstage/core-plugin-api';\nimport { useCallback, useEffect, useState } from 'react';\nimport { starredEntitiesApiRef } from '../apis';\n\nfunction getEntityRef(\n  entityOrRef: Entity | CompoundEntityRef | string,\n): string {\n  return typeof entityOrRef === 'string'\n    ? entityOrRef\n    : stringifyEntityRef(entityOrRef);\n}\n\n/** @public */\nexport function useStarredEntity(\n  entityOrRef: Entity | CompoundEntityRef | string,\n): {\n  toggleStarredEntity: () => void;\n  isStarredEntity: boolean;\n} {\n  const starredEntitiesApi = useApi(starredEntitiesApiRef);\n\n  const [isStarredEntity, setIsStarredEntity] = useState(false);\n\n  useEffect(() => {\n    const subscription = starredEntitiesApi.starredEntitie$().subscribe({\n      next(starredEntities: Set<string>) {\n        setIsStarredEntity(starredEntities.has(getEntityRef(entityOrRef)));\n      },\n    });\n\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, [entityOrRef, starredEntitiesApi]);\n\n  const toggleStarredEntity = useCallback(\n    () => starredEntitiesApi.toggleStarred(getEntityRef(entityOrRef)).then(),\n    [entityOrRef, starredEntitiesApi],\n  );\n\n  return {\n    toggleStarredEntity,\n    isStarredEntity,\n  };\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Entity,\n  RELATION_OWNED_BY,\n  stringifyEntityRef,\n} from '@backstage/catalog-model';\nimport { identityApiRef, useApi } from '@backstage/core-plugin-api';\nimport { useMemo } from 'react';\nimport useAsync from 'react-use/lib/useAsync';\nimport { getEntityRelations } from '../utils/getEntityRelations';\n\n/**\n * Returns a function that checks whether the currently signed-in user is an\n * owner of a given entity. When the hook is initially mounted, the loading\n * flag will be true and the results returned from the function will always be\n * false.\n *\n * @public\n *\n * @returns a function that checks if the signed in user owns an entity\n */\nexport function useEntityOwnership(): {\n  loading: boolean;\n  isOwnedEntity: (entity: Entity) => boolean;\n} {\n  const identityApi = useApi(identityApiRef);\n\n  // Trigger load only on mount\n  const { loading, value: refs } = useAsync(async () => {\n    const { ownershipEntityRefs } = await identityApi.getBackstageIdentity();\n    return ownershipEntityRefs;\n  }, []);\n\n  const isOwnedEntity = useMemo(() => {\n    const myOwnerRefs = new Set(refs ?? []);\n    return (entity: Entity) => {\n      const entityOwnerRefs = getEntityRelations(entity, RELATION_OWNED_BY).map(\n        stringifyEntityRef,\n      );\n      for (const ref of entityOwnerRefs) {\n        if (myOwnerRefs.has(ref)) {\n          return true;\n        }\n      }\n      return false;\n    };\n  }, [refs]);\n\n  return useMemo(() => ({ loading, isOwnedEntity }), [loading, isOwnedEntity]);\n}\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { stringifyEntityRef } from '@backstage/catalog-model';\nimport { ResourcePermission } from '@backstage/plugin-permission-common';\nimport { usePermission } from '@backstage/plugin-permission-react';\nimport { useAsyncEntity } from './useEntity';\n\n/**\n * A thin wrapper around the\n * {@link @backstage/plugin-permission-react#usePermission} hook which uses the\n * current entity in context to make an authorization request for the given\n * {@link @backstage/plugin-catalog-common#CatalogEntityPermission}.\n *\n * Note: this hook blocks the permission request until the entity has loaded in\n * context. If you have the entityRef and need concurrent requests, use the\n * `usePermission` hook directly.\n * @alpha\n */\nexport function useEntityPermission(\n  // TODO(joeporpeglia) Replace with `CatalogEntityPermission` when the issue described in\n  // https://github.com/backstage/backstage/pull/10128 is fixed.\n  permission: ResourcePermission<'catalog-entity'>,\n): {\n  loading: boolean;\n  allowed: boolean;\n  error?: Error;\n} {\n  const {\n    entity,\n    loading: loadingEntity,\n    error: entityError,\n  } = useAsyncEntity();\n  const {\n    allowed,\n    loading: loadingPermission,\n    error: permissionError,\n  } = usePermission({\n    permission,\n    resourceRef: entity ? stringifyEntityRef(entity) : undefined,\n  });\n\n  if (loadingEntity || loadingPermission) {\n    return { loading: true, allowed: false };\n  }\n  if (entityError) {\n    return { loading: false, allowed: false, error: entityError };\n  }\n  return { loading: false, allowed, error: permissionError };\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Select } from '@backstage/core-components';\nimport { alertApiRef, useApi } from '@backstage/core-plugin-api';\nimport { Box } from '@material-ui/core';\nimport capitalize from 'lodash/capitalize';\nimport sortBy from 'lodash/sortBy';\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport useAsync from 'react-use/lib/useAsync';\nimport { catalogApiRef } from '../../api';\nimport { EntityKindFilter } from '../../filters';\nimport { useEntityList } from '../../hooks';\n\nfunction useAvailableKinds() {\n  const catalogApi = useApi(catalogApiRef);\n\n  const [availableKinds, setAvailableKinds] = useState<string[]>([]);\n\n  const {\n    error,\n    loading,\n    value: facets,\n  } = useAsync(async () => {\n    const facet = 'kind';\n    const items = await catalogApi\n      .getEntityFacets({\n        facets: [facet],\n      })\n      .then(response => response.facets[facet] || []);\n\n    return items;\n  }, [catalogApi]);\n\n  const facetsRef = useRef(facets);\n  useEffect(() => {\n    const oldFacets = facetsRef.current;\n    facetsRef.current = facets;\n    // Delay processing hook until facets load updates have settled to generate list of kinds;\n    // This prevents resetting the kind filter due to saved kind value from query params not matching the\n    // empty set of kind values while values are still being loaded; also only run this hook on changes\n    // to facets\n    if (loading || oldFacets === facets || !facets) {\n      return;\n    }\n\n    const newKinds = [\n      ...new Set(\n        sortBy(facets, f => f.value).map(f =>\n          f.value.toLocaleLowerCase('en-US'),\n        ),\n      ),\n    ];\n\n    setAvailableKinds(newKinds);\n  }, [loading, facets, setAvailableKinds]);\n\n  return { loading, error, availableKinds };\n}\n\nfunction useEntityKindFilter(opts: { initialFilter: string }): {\n  loading: boolean;\n  error?: Error;\n  availableKinds: string[];\n  selectedKind: string;\n  setSelectedKind: (kind: string) => void;\n} {\n  const {\n    filters,\n    queryParameters: { kind: kindParameter },\n    updateFilters,\n  } = useEntityList();\n\n  const flattenedQueryKind = useMemo(\n    () => [kindParameter].flat()[0],\n    [kindParameter],\n  );\n\n  const [selectedKind, setSelectedKind] = useState(\n    flattenedQueryKind ?? filters.kind?.value ?? opts.initialFilter,\n  );\n\n  // Set selected kinds on query parameter updates; this happens at initial page load and from\n  // external updates to the page location.\n  useEffect(() => {\n    if (flattenedQueryKind) {\n      setSelectedKind(flattenedQueryKind);\n    }\n  }, [flattenedQueryKind]);\n\n  // Set selected kind from filters; this happens when the kind filter is\n  // updated from another component\n  useEffect(() => {\n    if (filters.kind?.value) {\n      setSelectedKind(filters.kind?.value);\n    }\n  }, [filters.kind]);\n\n  const { availableKinds, loading, error } = useAvailableKinds();\n\n  useEffect(() => {\n    updateFilters({\n      kind: selectedKind ? new EntityKindFilter(selectedKind) : undefined,\n    });\n  }, [selectedKind, updateFilters]);\n\n  return {\n    loading,\n    error,\n    availableKinds,\n    selectedKind,\n    setSelectedKind,\n  };\n}\n\n/**\n * Props for {@link EntityKindPicker}.\n *\n * @public\n */\nexport interface EntityKindPickerProps {\n  initialFilter?: string;\n  hidden?: boolean;\n}\n\n/** @public */\nexport const EntityKindPicker = (props: EntityKindPickerProps) => {\n  const { hidden, initialFilter = 'component' } = props;\n\n  const alertApi = useApi(alertApiRef);\n\n  const { error, availableKinds, selectedKind, setSelectedKind } =\n    useEntityKindFilter({\n      initialFilter: initialFilter,\n    });\n\n  useEffect(() => {\n    if (error) {\n      alertApi.post({\n        message: `Failed to load entity kinds`,\n        severity: 'error',\n      });\n    }\n  }, [error, alertApi]);\n\n  if (availableKinds?.length === 0 || error) return null;\n\n  const items = [\n    ...availableKinds.map((kind: string) => ({\n      value: kind,\n      label: capitalize(kind),\n    })),\n  ];\n\n  return hidden ? null : (\n    <Box pb={1} pt={1}>\n      <Select\n        label=\"Kind\"\n        items={items}\n        selected={selectedKind}\n        onChange={value => setSelectedKind(String(value))}\n      />\n    </Box>\n  );\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity } from '@backstage/catalog-model';\nimport {\n  Box,\n  Checkbox,\n  FormControlLabel,\n  makeStyles,\n  TextField,\n  Typography,\n} from '@material-ui/core';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Autocomplete } from '@material-ui/lab';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { useEntityList } from '../../hooks/useEntityListProvider';\nimport { EntityLifecycleFilter } from '../../filters';\n\n/** @public */\nexport type CatalogReactEntityLifecyclePickerClassKey = 'input';\n\nconst useStyles = makeStyles(\n  {\n    input: {},\n  },\n  {\n    name: 'CatalogReactEntityLifecyclePicker',\n  },\n);\n\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\n\n/** @public */\nexport const EntityLifecyclePicker = () => {\n  const classes = useStyles();\n  const {\n    updateFilters,\n    backendEntities,\n    filters,\n    queryParameters: { lifecycles: lifecyclesParameter },\n  } = useEntityList();\n\n  const queryParamLifecycles = useMemo(\n    () => [lifecyclesParameter].flat().filter(Boolean) as string[],\n    [lifecyclesParameter],\n  );\n\n  const [selectedLifecycles, setSelectedLifecycles] = useState(\n    queryParamLifecycles.length\n      ? queryParamLifecycles\n      : filters.lifecycles?.values ?? [],\n  );\n\n  // Set selected lifecycles on query parameter updates; this happens at initial page load and from\n  // external updates to the page location.\n  useEffect(() => {\n    if (queryParamLifecycles.length) {\n      setSelectedLifecycles(queryParamLifecycles);\n    }\n  }, [queryParamLifecycles]);\n\n  useEffect(() => {\n    updateFilters({\n      lifecycles: selectedLifecycles.length\n        ? new EntityLifecycleFilter(selectedLifecycles)\n        : undefined,\n    });\n  }, [selectedLifecycles, updateFilters]);\n\n  const availableLifecycles = useMemo(\n    () =>\n      [\n        ...new Set(\n          backendEntities\n            .map((e: Entity) => e.spec?.lifecycle)\n            .filter(Boolean) as string[],\n        ),\n      ].sort(),\n    [backendEntities],\n  );\n\n  if (!availableLifecycles.length) return null;\n\n  return (\n    <Box pb={1} pt={1}>\n      <Typography variant=\"button\" component=\"label\">\n        Lifecycle\n        <Autocomplete\n          multiple\n          options={availableLifecycles}\n          value={selectedLifecycles}\n          onChange={(_: object, value: string[]) =>\n            setSelectedLifecycles(value)\n          }\n          renderOption={(option, { selected }) => (\n            <FormControlLabel\n              control={\n                <Checkbox\n                  icon={icon}\n                  checkedIcon={checkedIcon}\n                  checked={selected}\n                />\n              }\n              label={option}\n            />\n          )}\n          size=\"small\"\n          popupIcon={<ExpandMoreIcon data-testid=\"lifecycle-picker-expand\" />}\n          renderInput={params => (\n            <TextField\n              {...params}\n              className={classes.input}\n              variant=\"outlined\"\n            />\n          )}\n        />\n      </Typography>\n    </Box>\n  );\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity, RELATION_OWNED_BY } from '@backstage/catalog-model';\nimport {\n  Box,\n  Checkbox,\n  FormControlLabel,\n  makeStyles,\n  TextField,\n  Typography,\n} from '@material-ui/core';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Autocomplete } from '@material-ui/lab';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { useEntityList } from '../../hooks/useEntityListProvider';\nimport { EntityOwnerFilter } from '../../filters';\nimport { getEntityRelations } from '../../utils';\nimport { humanizeEntityRef } from '../EntityRefLink';\n\n/** @public */\nexport type CatalogReactEntityOwnerPickerClassKey = 'input';\n\nconst useStyles = makeStyles(\n  {\n    input: {},\n  },\n  {\n    name: 'CatalogReactEntityOwnerPicker',\n  },\n);\n\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\n\n/** @public */\nexport const EntityOwnerPicker = () => {\n  const classes = useStyles();\n  const {\n    updateFilters,\n    backendEntities,\n    filters,\n    queryParameters: { owners: ownersParameter },\n  } = useEntityList();\n\n  const queryParamOwners = useMemo(\n    () => [ownersParameter].flat().filter(Boolean) as string[],\n    [ownersParameter],\n  );\n\n  const [selectedOwners, setSelectedOwners] = useState(\n    queryParamOwners.length ? queryParamOwners : filters.owners?.values ?? [],\n  );\n\n  // Set selected owners on query parameter updates; this happens at initial page load and from\n  // external updates to the page location.\n  useEffect(() => {\n    if (queryParamOwners.length) {\n      setSelectedOwners(queryParamOwners);\n    }\n  }, [queryParamOwners]);\n\n  useEffect(() => {\n    updateFilters({\n      owners: selectedOwners.length\n        ? new EntityOwnerFilter(selectedOwners)\n        : undefined,\n    });\n  }, [selectedOwners, updateFilters]);\n\n  const availableOwners = useMemo(\n    () =>\n      [\n        ...new Set(\n          backendEntities\n            .flatMap((e: Entity) =>\n              getEntityRelations(e, RELATION_OWNED_BY).map(o =>\n                humanizeEntityRef(o, { defaultKind: 'group' }),\n              ),\n            )\n            .filter(Boolean) as string[],\n        ),\n      ].sort(),\n    [backendEntities],\n  );\n\n  if (!availableOwners.length) return null;\n\n  return (\n    <Box pb={1} pt={1}>\n      <Typography variant=\"button\" component=\"label\">\n        Owner\n        <Autocomplete\n          multiple\n          options={availableOwners}\n          value={selectedOwners}\n          onChange={(_: object, value: string[]) => setSelectedOwners(value)}\n          renderOption={(option, { selected }) => (\n            <FormControlLabel\n              control={\n                <Checkbox\n                  icon={icon}\n                  checkedIcon={checkedIcon}\n                  checked={selected}\n                />\n              }\n              label={option}\n            />\n          )}\n          size=\"small\"\n          popupIcon={<ExpandMoreIcon data-testid=\"owner-picker-expand\" />}\n          renderInput={params => (\n            <TextField\n              {...params}\n              className={classes.input}\n              variant=\"outlined\"\n            />\n          )}\n        />\n      </Typography>\n    </Box>\n  );\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FormControl,\n  IconButton,\n  Input,\n  InputAdornment,\n  makeStyles,\n  Toolbar,\n} from '@material-ui/core';\nimport Clear from '@material-ui/icons/Clear';\nimport Search from '@material-ui/icons/Search';\nimport React, { useState } from 'react';\nimport useDebounce from 'react-use/lib/useDebounce';\nimport { useEntityList } from '../../hooks/useEntityListProvider';\nimport { EntityTextFilter } from '../../filters';\n\n/** @public */\nexport type CatalogReactEntitySearchBarClassKey = 'searchToolbar' | 'input';\n\nconst useStyles = makeStyles(\n  _theme => ({\n    searchToolbar: {\n      paddingLeft: 0,\n      paddingRight: 0,\n    },\n    input: {},\n  }),\n  {\n    name: 'CatalogReactEntitySearchBar',\n  },\n);\n\n/**\n * Renders search bar for filtering the entity list.\n * @public\n */\nexport const EntitySearchBar = () => {\n  const classes = useStyles();\n\n  const { filters, updateFilters } = useEntityList();\n  const [search, setSearch] = useState(filters.text?.value ?? '');\n\n  useDebounce(\n    () => {\n      updateFilters({\n        text: search.length ? new EntityTextFilter(search) : undefined,\n      });\n    },\n    250,\n    [search, updateFilters],\n  );\n\n  return (\n    <Toolbar className={classes.searchToolbar}>\n      <FormControl>\n        <Input\n          aria-label=\"search\"\n          id=\"input-with-icon-adornment\"\n          className={classes.input}\n          placeholder=\"Search\"\n          autoComplete=\"off\"\n          onChange={event => setSearch(event.target.value)}\n          value={search}\n          startAdornment={\n            <InputAdornment position=\"start\">\n              <Search />\n            </InputAdornment>\n          }\n          endAdornment={\n            <InputAdornment position=\"end\">\n              <IconButton\n                aria-label=\"clear search\"\n                onClick={() => setSearch('')}\n                edge=\"end\"\n                disabled={search.length === 0}\n              >\n                <Clear />\n              </IconButton>\n            </InputAdornment>\n          }\n        />\n      </FormControl>\n    </Toolbar>\n  );\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Entity,\n  CompoundEntityRef,\n  RELATION_OWNED_BY,\n  RELATION_PART_OF,\n} from '@backstage/catalog-model';\nimport { OverflowTooltip, TableColumn } from '@backstage/core-components';\nimport React from 'react';\nimport { getEntityRelations } from '../../utils';\nimport {\n  EntityRefLink,\n  EntityRefLinks,\n  humanizeEntityRef,\n} from '../EntityRefLink';\n\n/** @public */\nexport const columnFactories = Object.freeze({\n  createEntityRefColumn<T extends Entity>(options: {\n    defaultKind?: string;\n  }): TableColumn<T> {\n    const { defaultKind } = options;\n    function formatContent(entity: T): string {\n      return (\n        entity.metadata?.title ||\n        humanizeEntityRef(entity, {\n          defaultKind,\n        })\n      );\n    }\n\n    return {\n      title: 'Name',\n      highlight: true,\n      customFilterAndSearch(filter, entity) {\n        // TODO: We could implement this more efficiently, like searching over\n        // each field that is displayed individually (kind, namespace, name).\n        // but that might confuse the user as it will behave different than a\n        // simple text search.\n        // Another alternative would be to cache the values. But writing them\n        // into the entity feels bad too.\n        return formatContent(entity).includes(filter);\n      },\n      customSort(entity1, entity2) {\n        // TODO: We could implement this more efficiently by comparing field by field.\n        // This has similar issues as above.\n        return formatContent(entity1).localeCompare(formatContent(entity2));\n      },\n      render: entity => (\n        <EntityRefLink\n          entityRef={entity}\n          defaultKind={defaultKind}\n          title={entity.metadata?.title}\n        />\n      ),\n    };\n  },\n  createEntityRelationColumn<T extends Entity>(options: {\n    title: string;\n    relation: string;\n    defaultKind?: string;\n    filter?: { kind: string };\n  }): TableColumn<T> {\n    const { title, relation, defaultKind, filter: entityFilter } = options;\n\n    function getRelations(entity: T): CompoundEntityRef[] {\n      return getEntityRelations(entity, relation, entityFilter);\n    }\n\n    function formatContent(entity: T): string {\n      return getRelations(entity)\n        .map(r => humanizeEntityRef(r, { defaultKind }))\n        .join(', ');\n    }\n\n    return {\n      title,\n      customFilterAndSearch(filter, entity) {\n        return formatContent(entity).includes(filter);\n      },\n      customSort(entity1, entity2) {\n        return formatContent(entity1).localeCompare(formatContent(entity2));\n      },\n      render: entity => {\n        return (\n          <EntityRefLinks\n            entityRefs={getRelations(entity)}\n            defaultKind={defaultKind}\n          />\n        );\n      },\n    };\n  },\n  createOwnerColumn<T extends Entity>(): TableColumn<T> {\n    return this.createEntityRelationColumn({\n      title: 'Owner',\n      relation: RELATION_OWNED_BY,\n      defaultKind: 'group',\n    });\n  },\n  createDomainColumn<T extends Entity>(): TableColumn<T> {\n    return this.createEntityRelationColumn({\n      title: 'Domain',\n      relation: RELATION_PART_OF,\n      defaultKind: 'domain',\n      filter: {\n        kind: 'domain',\n      },\n    });\n  },\n  createSystemColumn<T extends Entity>(): TableColumn<T> {\n    return this.createEntityRelationColumn({\n      title: 'System',\n      relation: RELATION_PART_OF,\n      defaultKind: 'system',\n      filter: {\n        kind: 'system',\n      },\n    });\n  },\n  createMetadataDescriptionColumn<T extends Entity>(): TableColumn<T> {\n    return {\n      title: 'Description',\n      field: 'metadata.description',\n      render: entity => (\n        <OverflowTooltip\n          text={entity.metadata.description}\n          placement=\"bottom-start\"\n          line={2}\n        />\n      ),\n    };\n  },\n  createSpecLifecycleColumn<T extends Entity>(): TableColumn<T> {\n    return {\n      title: 'Lifecycle',\n      field: 'spec.lifecycle',\n    };\n  },\n  createSpecTypeColumn<T extends Entity>(): TableColumn<T> {\n    return {\n      title: 'Type',\n      field: 'spec.type',\n    };\n  },\n});\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ComponentEntity, SystemEntity } from '@backstage/catalog-model';\nimport { TableColumn } from '@backstage/core-components';\nimport { columnFactories } from './columns';\n\nexport const systemEntityColumns: TableColumn<SystemEntity>[] = [\n  columnFactories.createEntityRefColumn({ defaultKind: 'system' }),\n  columnFactories.createDomainColumn(),\n  columnFactories.createOwnerColumn(),\n  columnFactories.createMetadataDescriptionColumn(),\n];\n\nexport const componentEntityColumns: TableColumn<ComponentEntity>[] = [\n  columnFactories.createEntityRefColumn({ defaultKind: 'component' }),\n  columnFactories.createSystemColumn(),\n  columnFactories.createOwnerColumn(),\n  columnFactories.createSpecTypeColumn(),\n  columnFactories.createSpecLifecycleColumn(),\n  columnFactories.createMetadataDescriptionColumn(),\n];\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity } from '@backstage/catalog-model';\nimport { makeStyles } from '@material-ui/core';\nimport React, { ReactNode } from 'react';\nimport { columnFactories } from './columns';\nimport { componentEntityColumns, systemEntityColumns } from './presets';\nimport {\n  InfoCardVariants,\n  Table,\n  TableColumn,\n} from '@backstage/core-components';\n\n/**\n * Props for {@link EntityTable}.\n *\n * @public\n */\nexport interface EntityTableProps<T extends Entity> {\n  title: string;\n  variant?: InfoCardVariants;\n  entities: T[];\n  emptyContent?: ReactNode;\n  columns: TableColumn<T>[];\n}\n\nconst useStyles = makeStyles(theme => ({\n  empty: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    justifyContent: 'center',\n  },\n}));\n\n/**\n * A general entity table component, that can be used for composing more\n * specific entity tables.\n *\n * @public\n */\nexport const EntityTable = <T extends Entity>(props: EntityTableProps<T>) => {\n  const {\n    entities,\n    title,\n    emptyContent,\n    variant = 'gridItem',\n    columns,\n  } = props;\n\n  const classes = useStyles();\n  const tableStyle: React.CSSProperties = {\n    minWidth: '0',\n    width: '100%',\n  };\n\n  if (variant === 'gridItem') {\n    tableStyle.height = 'calc(100% - 10px)';\n  }\n\n  return (\n    <Table<T>\n      columns={columns}\n      title={title}\n      style={tableStyle}\n      emptyContent={\n        emptyContent && <div className={classes.empty}>{emptyContent}</div>\n      }\n      options={{\n        // TODO: Toolbar padding if off compared to other cards, should be: padding: 16px 24px;\n        search: false,\n        paging: false,\n        actionsColumnIndex: -1,\n        padding: 'dense',\n        draggable: false,\n      }}\n      data={entities}\n    />\n  );\n};\n\nEntityTable.columns = columnFactories;\n\nEntityTable.systemEntityColumns = systemEntityColumns;\n\nEntityTable.componentEntityColumns = componentEntityColumns;\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Box,\n  Checkbox,\n  FormControlLabel,\n  makeStyles,\n  TextField,\n  Typography,\n} from '@material-ui/core';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Autocomplete } from '@material-ui/lab';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { useEntityList } from '../../hooks/useEntityListProvider';\nimport { EntityTagFilter } from '../../filters';\nimport { useApi } from '@backstage/core-plugin-api';\nimport useAsync from 'react-use/lib/useAsync';\nimport { catalogApiRef } from '../../api';\n\n/** @public */\nexport type CatalogReactEntityTagPickerClassKey = 'input';\n\nconst useStyles = makeStyles(\n  {\n    input: {},\n  },\n  {\n    name: 'CatalogReactEntityTagPicker',\n  },\n);\n\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\n\n/** @public */\nexport type EntityTagPickerProps = {\n  showCounts?: boolean;\n};\n\n/** @public */\nexport const EntityTagPicker = (props: EntityTagPickerProps) => {\n  const classes = useStyles();\n  const {\n    updateFilters,\n    filters,\n    queryParameters: { tags: tagsParameter },\n  } = useEntityList();\n\n  const catalogApi = useApi(catalogApiRef);\n  const { value: availableTags } = useAsync(async () => {\n    const facet = 'metadata.tags';\n    const { facets } = await catalogApi.getEntityFacets({\n      facets: [facet],\n      filter: filters.kind?.getCatalogFilters(),\n    });\n\n    return Object.fromEntries(\n      facets[facet].map(({ value, count }) => [value, count]),\n    );\n  }, [filters.kind]);\n\n  const queryParamTags = useMemo(\n    () => [tagsParameter].flat().filter(Boolean) as string[],\n    [tagsParameter],\n  );\n\n  const [selectedTags, setSelectedTags] = useState(\n    queryParamTags.length ? queryParamTags : filters.tags?.values ?? [],\n  );\n\n  // Set selected tags on query parameter updates; this happens at initial page load and from\n  // external updates to the page location.\n  useEffect(() => {\n    if (queryParamTags.length) {\n      setSelectedTags(queryParamTags);\n    }\n  }, [queryParamTags]);\n\n  useEffect(() => {\n    updateFilters({\n      tags: selectedTags.length ? new EntityTagFilter(selectedTags) : undefined,\n    });\n  }, [selectedTags, updateFilters]);\n\n  if (!Object.keys(availableTags ?? {}).length) return null;\n\n  return (\n    <Box pb={1} pt={1}>\n      <Typography variant=\"button\" component=\"label\">\n        Tags\n        <Autocomplete\n          multiple\n          options={Object.keys(availableTags ?? {})}\n          value={selectedTags}\n          onChange={(_: object, value: string[]) => setSelectedTags(value)}\n          renderOption={(option, { selected }) => (\n            <FormControlLabel\n              control={\n                <Checkbox\n                  icon={icon}\n                  checkedIcon={checkedIcon}\n                  checked={selected}\n                />\n              }\n              label={\n                props.showCounts\n                  ? `${option} (${availableTags?.[option]})`\n                  : option\n              }\n            />\n          )}\n          size=\"small\"\n          popupIcon={<ExpandMoreIcon data-testid=\"tag-picker-expand\" />}\n          renderInput={params => (\n            <TextField\n              {...params}\n              className={classes.input}\n              variant=\"outlined\"\n            />\n          )}\n        />\n      </Typography>\n    </Box>\n  );\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useEffect } from 'react';\nimport { Box } from '@material-ui/core';\nimport { useEntityTypeFilter } from '../../hooks/useEntityTypeFilter';\n\nimport { alertApiRef, useApi } from '@backstage/core-plugin-api';\nimport { Select } from '@backstage/core-components';\n\n/**\n * Props for {@link EntityTypePicker}.\n *\n * @public\n */\nexport interface EntityTypePickerProps {\n  initialFilter?: string;\n  hidden?: boolean;\n}\n\n/** @public */\nexport const EntityTypePicker = (props: EntityTypePickerProps) => {\n  const { hidden, initialFilter } = props;\n  const alertApi = useApi(alertApiRef);\n  const { error, availableTypes, selectedTypes, setSelectedTypes } =\n    useEntityTypeFilter();\n\n  useEffect(() => {\n    if (error) {\n      alertApi.post({\n        message: `Failed to load entity types`,\n        severity: 'error',\n      });\n    }\n    if (initialFilter) {\n      setSelectedTypes([initialFilter]);\n    }\n  }, [error, alertApi, initialFilter, setSelectedTypes]);\n\n  if (availableTypes.length === 0 || error) return null;\n\n  const items = [\n    { value: 'all', label: 'all' },\n    ...availableTypes.map((type: string) => ({\n      value: type,\n      label: type,\n    })),\n  ];\n\n  return hidden ? null : (\n    <Box pb={1} pt={1}>\n      <Select\n        label=\"Type\"\n        items={items}\n        selected={(items.length > 1 ? selectedTypes[0] : undefined) ?? 'all'}\n        onChange={value =>\n          setSelectedTypes(value === 'all' ? [] : [String(value)])\n        }\n      />\n    </Box>\n  );\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity } from '@backstage/catalog-model';\nimport { IconButton, Tooltip, withStyles } from '@material-ui/core';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport React, { ComponentProps } from 'react';\nimport { useStarredEntity } from '../../hooks/useStarredEntity';\n\n/** @public */\nexport type FavoriteEntityProps = ComponentProps<typeof IconButton> & {\n  entity: Entity;\n};\n\nconst YellowStar = withStyles({\n  root: {\n    color: '#f3ba37',\n  },\n})(Star);\n\n/**\n * IconButton for showing if a current entity is starred and adding/removing it from the favorite entities\n * @param props - MaterialUI IconButton props extended by required `entity` prop\n * @public\n */\nexport const FavoriteEntity = (props: FavoriteEntityProps) => {\n  const { toggleStarredEntity, isStarredEntity } = useStarredEntity(\n    props.entity,\n  );\n  return (\n    <IconButton\n      aria-label=\"favorite\"\n      color=\"inherit\"\n      {...props}\n      onClick={() => toggleStarredEntity()}\n    >\n      <Tooltip\n        title={isStarredEntity ? 'Remove from favorites' : 'Add to favorites'}\n      >\n        {isStarredEntity ? <YellowStar /> : <StarBorder />}\n      </Tooltip>\n    </IconButton>\n  );\n};\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { parseEntityRef } from '@backstage/catalog-model';\nimport { useApp } from '@backstage/core-plugin-api';\nimport WorkIcon from '@material-ui/icons/Work';\nimport React from 'react';\n\nconst DEFAULT_ICON = WorkIcon;\n\nfunction getKind(\n  kind: string | undefined,\n  entityRef: string | undefined,\n): string | undefined {\n  if (kind) {\n    return kind.toLocaleLowerCase('en-US');\n  }\n\n  if (entityRef) {\n    try {\n      return parseEntityRef(entityRef).kind.toLocaleLowerCase('en-US');\n    } catch {\n      return undefined;\n    }\n  }\n\n  return undefined;\n}\n\nfunction useIcon(kind: string | undefined, entityRef: string | undefined) {\n  const app = useApp();\n\n  const actualKind = getKind(kind, entityRef);\n  if (!actualKind) {\n    return DEFAULT_ICON;\n  }\n\n  const icon = app.getSystemIcon(`kind:${actualKind}`);\n  return icon || DEFAULT_ICON;\n}\n\nexport function EntityKindIcon(props: {\n  kind?: string;\n  entityRef?: string;\n  x?: number;\n  y?: number;\n  width?: number;\n  height?: number;\n  className?: string;\n}) {\n  const { kind, entityRef, ...otherProps } = props;\n  const Icon = useIcon(kind, entityRef);\n  return <Icon {...otherProps} />;\n}\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Entity,\n  DEFAULT_NAMESPACE,\n  stringifyEntityRef,\n} from '@backstage/catalog-model';\nimport {\n  DependencyGraph,\n  DependencyGraphTypes,\n  Link,\n  Progress,\n  ResponseErrorPanel,\n} from '@backstage/core-components';\nimport { useApi, useRouteRef } from '@backstage/core-plugin-api';\nimport { Box, DialogContentText, makeStyles } from '@material-ui/core';\nimport classNames from 'classnames';\nimport React, { useLayoutEffect, useRef, useState } from 'react';\nimport { useNavigate } from 'react-router';\nimport useAsync from 'react-use/lib/useAsync';\nimport { catalogApiRef } from '../../../api';\nimport { humanizeEntityRef } from '../../EntityRefLink';\nimport { entityRouteRef } from '../../../routes';\nimport { EntityKindIcon } from './EntityKindIcon';\n\nconst useStyles = makeStyles(theme => ({\n  node: {\n    fill: theme.palette.grey[300],\n    stroke: theme.palette.grey[300],\n    '&.primary': {\n      fill: theme.palette.primary.light,\n      stroke: theme.palette.primary.light,\n    },\n    '&.secondary': {\n      fill: theme.palette.secondary.light,\n      stroke: theme.palette.secondary.light,\n    },\n  },\n  text: {\n    fill: theme.palette.getContrastText(theme.palette.grey[300]),\n    '&.primary': {\n      fill: theme.palette.primary.contrastText,\n    },\n    '&.secondary': {\n      fill: theme.palette.secondary.contrastText,\n    },\n    '&.focused': {\n      fontWeight: 'bold',\n    },\n  },\n  clickable: {\n    cursor: 'pointer',\n  },\n}));\n\ntype NodeType = Entity & { root: boolean };\n\nfunction useAncestry(root: Entity): {\n  loading: boolean;\n  error?: Error;\n  nodes: DependencyGraphTypes.DependencyNode<NodeType>[];\n  edges: DependencyGraphTypes.DependencyEdge[];\n} {\n  const catalogClient = useApi(catalogApiRef);\n  const entityRef = stringifyEntityRef(root);\n\n  const { loading, error, value } = useAsync(async () => {\n    const response = await catalogClient.getEntityAncestors({ entityRef });\n    const nodes = new Array<DependencyGraphTypes.DependencyNode<NodeType>>();\n    const edges = new Array<DependencyGraphTypes.DependencyEdge>();\n    for (const current of response.items) {\n      const currentRef = stringifyEntityRef(current.entity);\n      const isRootNode = currentRef === response.rootEntityRef;\n      nodes.push({ id: currentRef, root: isRootNode, ...current.entity });\n      for (const parentRef of current.parentEntityRefs) {\n        edges.push({ from: currentRef, to: parentRef });\n      }\n    }\n    return { nodes, edges };\n  }, [entityRef]);\n\n  return {\n    loading,\n    error,\n    nodes: value?.nodes || [],\n    edges: value?.edges || [],\n  };\n}\n\nfunction CustomNode({ node }: DependencyGraphTypes.RenderNodeProps<NodeType>) {\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const entityRoute = useRouteRef(entityRouteRef);\n  const [width, setWidth] = useState(0);\n  const [height, setHeight] = useState(0);\n  const idRef = useRef<SVGTextElement | null>(null);\n\n  useLayoutEffect(() => {\n    // set the width to the length of the ID\n    if (idRef.current) {\n      let { height: renderedHeight, width: renderedWidth } =\n        idRef.current.getBBox();\n      renderedHeight = Math.round(renderedHeight);\n      renderedWidth = Math.round(renderedWidth);\n      if (renderedHeight !== height || renderedWidth !== width) {\n        setWidth(renderedWidth);\n        setHeight(renderedHeight);\n      }\n    }\n  }, [width, height]);\n\n  const padding = 10;\n  const iconSize = height;\n  const paddedIconWidth = iconSize + padding;\n  const paddedWidth = paddedIconWidth + width + padding * 2;\n  const paddedHeight = height + padding * 2;\n\n  const displayTitle =\n    node.metadata.title ||\n    (node.kind && node.metadata.name && node.metadata.namespace\n      ? humanizeEntityRef({\n          kind: node.kind,\n          name: node.metadata.name,\n          namespace: node.metadata.namespace || '',\n        })\n      : node.id);\n\n  const onClick = () => {\n    navigate(\n      entityRoute({\n        kind: node.kind,\n        namespace: node.metadata.namespace || DEFAULT_NAMESPACE,\n        name: node.metadata.name,\n      }),\n    );\n  };\n\n  return (\n    <g onClick={onClick} className={classes.clickable}>\n      <rect\n        className={classNames(\n          classes.node,\n          node.root ? 'secondary' : 'primary',\n        )}\n        width={paddedWidth}\n        height={paddedHeight}\n        rx={10}\n      />\n      <EntityKindIcon\n        kind={node.kind}\n        y={padding}\n        x={padding}\n        width={iconSize}\n        height={iconSize}\n        className={classNames(\n          classes.text,\n          node.root ? 'secondary' : 'primary',\n        )}\n      />\n      <text\n        ref={idRef}\n        className={classNames(\n          classes.text,\n          node.root ? 'secondary' : 'primary',\n        )}\n        y={paddedHeight / 2}\n        x={paddedIconWidth + (width + padding * 2) / 2}\n        textAnchor=\"middle\"\n        alignmentBaseline=\"middle\"\n      >\n        {displayTitle}\n      </text>\n    </g>\n  );\n}\n\nexport function AncestryPage(props: { entity: Entity }) {\n  const { loading, error, nodes, edges } = useAncestry(props.entity);\n  if (loading) {\n    return <Progress />;\n  } else if (error) {\n    return <ResponseErrorPanel error={error} />;\n  }\n\n  return (\n    <>\n      <DialogContentText variant=\"h2\">Ancestry</DialogContentText>\n      <DialogContentText gutterBottom>\n        This is the ancestry of entities above the current one - as in, the\n        chain(s) of entities down to the current one, where{' '}\n        <Link to=\"https://backstage.io/docs/features/software-catalog/life-of-an-entity\">\n          processors emitted\n        </Link>{' '}\n        child entities that ultimately led to the current one existing. Note\n        that this is a completely different mechanism from relations.\n      </DialogContentText>\n      <Box mt={4}>\n        <DependencyGraph\n          nodes={nodes}\n          edges={edges}\n          renderNode={CustomNode}\n          direction={DependencyGraphTypes.Direction.BOTTOM_TOP}\n          zoom=\"enable-on-click\"\n        />\n      </Box>\n    </>\n  );\n}\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Link } from '@backstage/core-components';\nimport {\n  Box,\n  Card,\n  CardContent,\n  ListItem,\n  ListItemIcon,\n  ListItemText as MuiListItemText,\n  ListSubheader as MuiListSubheader,\n  makeStyles,\n  Typography,\n} from '@material-ui/core';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\nimport React from 'react';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  marginTop: {\n    marginTop: theme.spacing(2),\n  },\n  helpIcon: {\n    marginLeft: theme.spacing(1),\n    color: theme.palette.text.disabled,\n  },\n  monospace: {\n    fontFamily: 'monospace',\n  },\n}));\n\nexport function ListItemText(props: {\n  primary: React.ReactNode;\n  secondary?: React.ReactNode;\n}) {\n  const classes = useStyles();\n  return (\n    <MuiListItemText\n      {...props}\n      primaryTypographyProps={{ className: classes.monospace }}\n      secondaryTypographyProps={{ className: classes.monospace }}\n    />\n  );\n}\n\nexport function ListSubheader(props: { children?: React.ReactNode }) {\n  const classes = useStyles();\n  return (\n    <MuiListSubheader className={classes.monospace}>\n      {props.children}\n    </MuiListSubheader>\n  );\n}\n\nexport function Container(props: {\n  title: React.ReactNode;\n  helpLink?: string;\n  children: React.ReactNode;\n}) {\n  return (\n    <Box mt={2}>\n      <Card variant=\"outlined\">\n        <CardContent>\n          <Typography variant=\"h6\" gutterBottom>\n            {props.title}\n            {props.helpLink && <HelpIcon to={props.helpLink} />}\n          </Typography>\n          {props.children}\n        </CardContent>\n      </Card>\n    </Box>\n  );\n}\n\n// Extracts a link from a value, if possible\nfunction findLink(value: string): string | undefined {\n  if (value.match(/^url:https?:\\/\\//)) {\n    return value.slice('url:'.length);\n  }\n  if (value.match(/^https?:\\/\\//)) {\n    return value;\n  }\n  return undefined;\n}\n\nexport function KeyValueListItem(props: {\n  indent?: boolean;\n  entry: [string, string];\n}) {\n  const [key, value] = props.entry;\n  const link = findLink(value);\n\n  return (\n    <ListItem>\n      {props.indent && <ListItemIcon />}\n      <ListItemText\n        primary={key}\n        secondary={link ? <Link to={link}>{value}</Link> : value}\n      />\n    </ListItem>\n  );\n}\n\nexport function HelpIcon(props: { to: string }) {\n  const classes = useStyles();\n  return (\n    <Link to={props.to} className={classes.helpIcon}>\n      <HelpOutlineIcon fontSize=\"inherit\" />\n    </Link>\n  );\n}\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Entity,\n  ANNOTATION_LOCATION,\n  ANNOTATION_ORIGIN_LOCATION,\n  stringifyEntityRef,\n} from '@backstage/catalog-model';\nimport { Progress, ResponseErrorPanel } from '@backstage/core-components';\nimport { useApi } from '@backstage/core-plugin-api';\nimport {\n  DialogContentText,\n  List,\n  ListItem,\n  ListItemIcon,\n  makeStyles,\n} from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport React from 'react';\nimport useAsync from 'react-use/lib/useAsync';\nimport { catalogApiRef } from '../../../api';\nimport { EntityRefLink } from '../../EntityRefLink';\nimport { KeyValueListItem, ListItemText } from './common';\nimport { EntityKindIcon } from './EntityKindIcon';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n});\n\nfunction useColocated(entity: Entity): {\n  loading: boolean;\n  error?: Error;\n  location?: string;\n  originLocation?: string;\n  colocatedEntities?: Entity[];\n} {\n  const catalogApi = useApi(catalogApiRef);\n  const currentEntityRef = stringifyEntityRef(entity);\n  const location = entity.metadata.annotations?.[ANNOTATION_LOCATION];\n  const origin = entity.metadata.annotations?.[ANNOTATION_ORIGIN_LOCATION];\n\n  const { loading, error, value } = useAsync(async () => {\n    if (!location && !origin) {\n      return [];\n    }\n    const response = await catalogApi.getEntities({\n      filter: [\n        ...(location\n          ? [{ [`metadata.annotations.${ANNOTATION_LOCATION}`]: location }]\n          : []),\n        ...(origin\n          ? [{ [`metadata.annotations.${ANNOTATION_ORIGIN_LOCATION}`]: origin }]\n          : []),\n      ],\n    });\n    return response.items;\n  }, [location, origin]);\n\n  return {\n    loading,\n    error,\n    location,\n    originLocation: origin,\n    colocatedEntities: value?.filter(\n      colocated => stringifyEntityRef(colocated) !== currentEntityRef,\n    ),\n  };\n}\n\nfunction EntityList(props: { entities: Entity[]; header?: [string, string] }) {\n  return (\n    <List dense>\n      {props.header && <KeyValueListItem key=\"header\" entry={props.header} />}\n      {props.entities.map(entity => (\n        <ListItem key={stringifyEntityRef(entity)}>\n          <ListItemIcon>\n            <EntityKindIcon kind={entity.kind} />\n          </ListItemIcon>\n          <ListItemText primary={<EntityRefLink entityRef={entity} />} />\n        </ListItem>\n      ))}\n    </List>\n  );\n}\n\nfunction Contents(props: { entity: Entity }) {\n  const { entity } = props;\n\n  const { loading, error, location, originLocation, colocatedEntities } =\n    useColocated(entity);\n  if (loading) {\n    return <Progress />;\n  } else if (error) {\n    return <ResponseErrorPanel error={error} />;\n  }\n\n  if (!location && !originLocation) {\n    return (\n      <Alert severity=\"warning\">Entity had no location information.</Alert>\n    );\n  } else if (!colocatedEntities?.length) {\n    return (\n      <Alert severity=\"info\">\n        There were no other entities on this location.\n      </Alert>\n    );\n  }\n\n  if (location === originLocation) {\n    return <EntityList entities={colocatedEntities} />;\n  }\n\n  const atLocation = colocatedEntities.filter(\n    e => e.metadata.annotations?.[ANNOTATION_LOCATION] === location,\n  );\n  const atOrigin = colocatedEntities.filter(\n    e =>\n      e.metadata.annotations?.[ANNOTATION_ORIGIN_LOCATION] === originLocation,\n  );\n\n  return (\n    <>\n      {atLocation.length > 0 && (\n        <EntityList\n          entities={atLocation}\n          header={['At the same location', location!]}\n        />\n      )}\n      {atOrigin.length > 0 && (\n        <EntityList\n          entities={atOrigin}\n          header={['At the same origin', originLocation!]}\n        />\n      )}\n    </>\n  );\n}\n\nexport function ColocatedPage(props: { entity: Entity }) {\n  const classes = useStyles();\n  return (\n    <>\n      <DialogContentText variant=\"h2\">Colocated</DialogContentText>\n      <DialogContentText>\n        These are the entities that are colocated with this entity - as in, they\n        originated from the same data source (e.g. came from the same YAML\n        file), or from the same origin (e.g. the originally registered URL).\n      </DialogContentText>\n      <div className={classes.root}>\n        <Contents entity={props.entity} />\n      </div>\n    </>\n  );\n}\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { JsonObject } from '@backstage/types';\n\nexport function sortKeys(data: JsonObject): JsonObject {\n  // we could do something custom, but lexicographical sorting is actually a\n  // good choice at least for the default set of keys\n  return Object.fromEntries(\n    [...Object.entries(data)].sort((a, b) => (a[0] < b[0] ? -1 : 1)),\n  );\n}\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity } from '@backstage/catalog-model';\nimport { CodeSnippet } from '@backstage/core-components';\nimport { DialogContentText } from '@material-ui/core';\nimport React from 'react';\nimport { sortKeys } from './util';\n\nexport function JsonPage(props: { entity: Entity }) {\n  return (\n    <>\n      <DialogContentText variant=\"h2\">Entity as JSON</DialogContentText>\n      <DialogContentText>\n        This is the raw entity data as received from the catalog, on JSON form.\n      </DialogContentText>\n      <DialogContentText>\n        <div style={{ fontSize: '75%' }} data-testid=\"code-snippet\">\n          <CodeSnippet\n            text={JSON.stringify(sortKeys(props.entity), undefined, 2)}\n            language=\"json\"\n            showCopyCodeButton\n          />\n        </div>\n      </DialogContentText>\n    </>\n  );\n}\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlphaEntity } from '@backstage/catalog-model';\nimport {\n  Box,\n  DialogContentText,\n  List,\n  ListItem,\n  ListItemIcon,\n  makeStyles,\n  Typography,\n} from '@material-ui/core';\nimport groupBy from 'lodash/groupBy';\nimport sortBy from 'lodash/sortBy';\nimport React from 'react';\nimport { EntityRefLink } from '../../EntityRefLink';\nimport {\n  Container,\n  HelpIcon,\n  KeyValueListItem,\n  ListItemText,\n  ListSubheader,\n} from './common';\nimport { EntityKindIcon } from './EntityKindIcon';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n});\n\nexport function OverviewPage(props: { entity: AlphaEntity }) {\n  const classes = useStyles();\n  const {\n    apiVersion,\n    kind,\n    metadata,\n    spec,\n    relations = [],\n    status = {},\n  } = props.entity;\n\n  const groupedRelations = groupBy(\n    sortBy(relations, r => r.targetRef),\n    'type',\n  );\n\n  return (\n    <>\n      <DialogContentText variant=\"h2\">Overview</DialogContentText>\n      <div className={classes.root}>\n        <Container title=\"Identity\">\n          <List dense>\n            <ListItem>\n              <ListItemText primary=\"apiVersion\" secondary={apiVersion} />\n            </ListItem>\n            <ListItem>\n              <ListItemText primary=\"kind\" secondary={kind} />\n            </ListItem>\n            {spec?.type && (\n              <ListItem>\n                <ListItemText primary=\"spec.type\" secondary={spec.type} />\n              </ListItem>\n            )}\n            {metadata.uid && (\n              <ListItem>\n                <ListItemText primary=\"uid\" secondary={metadata.uid} />\n              </ListItem>\n            )}\n            {metadata.etag && (\n              <ListItem>\n                <ListItemText primary=\"etag\" secondary={metadata.etag} />\n              </ListItem>\n            )}\n          </List>\n        </Container>\n\n        <Container title=\"Metadata\">\n          {!!Object.keys(metadata.annotations || {}).length && (\n            <List\n              dense\n              subheader={\n                <ListSubheader>\n                  Annotations\n                  <HelpIcon to=\"https://backstage.io/docs/features/software-catalog/well-known-annotations\" />\n                </ListSubheader>\n              }\n            >\n              {Object.entries(metadata.annotations!).map(entry => (\n                <KeyValueListItem key={entry[0]} indent entry={entry} />\n              ))}\n            </List>\n          )}\n          {!!Object.keys(metadata.labels || {}).length && (\n            <List dense subheader={<ListSubheader>Labels</ListSubheader>}>\n              {Object.entries(metadata.labels!).map(entry => (\n                <KeyValueListItem key={entry[0]} indent entry={entry} />\n              ))}\n            </List>\n          )}\n          {!!metadata.tags?.length && (\n            <List dense subheader={<ListSubheader>Tags</ListSubheader>}>\n              {metadata.tags.map((tag, index) => (\n                <ListItem key={`${tag}-${index}`}>\n                  <ListItemIcon />\n                  <ListItemText primary={tag} />\n                </ListItem>\n              ))}\n            </List>\n          )}\n        </Container>\n\n        {!!relations.length && (\n          <Container\n            title=\"Relations\"\n            helpLink=\"https://backstage.io/docs/features/software-catalog/well-known-relations\"\n          >\n            {Object.entries(groupedRelations).map(\n              ([type, groupRelations], index) => (\n                <div key={index}>\n                  <List dense subheader={<ListSubheader>{type}</ListSubheader>}>\n                    {groupRelations.map(group => (\n                      <ListItem key={group.targetRef}>\n                        <ListItemIcon>\n                          <EntityKindIcon entityRef={group.targetRef} />\n                        </ListItemIcon>\n                        <ListItemText\n                          primary={\n                            <EntityRefLink entityRef={group.targetRef} />\n                          }\n                        />\n                      </ListItem>\n                    ))}\n                  </List>\n                </div>\n              ),\n            )}\n          </Container>\n        )}\n\n        {!!status.items?.length && (\n          <Container\n            title=\"Status\"\n            helpLink=\"https://backstage.io/docs/features/software-catalog/well-known-statuses\"\n          >\n            {status.items.map((item, index) => (\n              <div key={index}>\n                <Typography>\n                  {item.level}: {item.type}\n                </Typography>\n                <Box ml={2}>{item.message}</Box>\n              </div>\n            ))}\n          </Container>\n        )}\n      </div>\n    </>\n  );\n}\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity } from '@backstage/catalog-model';\nimport { CodeSnippet } from '@backstage/core-components';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport React from 'react';\nimport YAML from 'yaml';\nimport { sortKeys } from './util';\n\nexport function YamlPage(props: { entity: Entity }) {\n  return (\n    <>\n      <DialogContentText variant=\"h2\">Entity as YAML</DialogContentText>\n      <DialogContentText>\n        This is the raw entity data as received from the catalog, on YAML form.\n      </DialogContentText>\n      <DialogContentText>\n        <div style={{ fontSize: '75%' }} data-testid=\"code-snippet\">\n          <CodeSnippet\n            text={YAML.stringify(sortKeys(props.entity))}\n            language=\"yaml\"\n            showCopyCodeButton\n          />\n        </div>\n      </DialogContentText>\n    </>\n  );\n}\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity } from '@backstage/catalog-model';\nimport {\n  Box,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  makeStyles,\n  Tab,\n  Tabs,\n} from '@material-ui/core';\nimport React, { useEffect } from 'react';\nimport { AncestryPage } from './components/AncestryPage';\nimport { ColocatedPage } from './components/ColocatedPage';\nimport { JsonPage } from './components/JsonPage';\nimport { OverviewPage } from './components/OverviewPage';\nimport { YamlPage } from './components/YamlPage';\n\nconst useStyles = makeStyles(theme => ({\n  fullHeightDialog: {\n    height: 'calc(100% - 64px)',\n  },\n  root: {\n    display: 'flex',\n    flexGrow: 1,\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n  },\n  tabs: {\n    borderRight: `1px solid ${theme.palette.divider}`,\n    flexShrink: 0,\n  },\n  tabContents: {\n    flexGrow: 1,\n    overflowX: 'auto',\n  },\n}));\n\nfunction TabPanel(props: {\n  children?: React.ReactNode;\n  index: number;\n  value: number;\n}) {\n  const { children, value, index, ...other } = props;\n  const classes = useStyles();\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`vertical-tabpanel-${index}`}\n      aria-labelledby={`vertical-tab-${index}`}\n      className={classes.tabContents}\n      {...other}\n    >\n      {value === index && (\n        <Box pl={3} pr={3}>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n\nfunction a11yProps(index: number) {\n  return {\n    id: `vertical-tab-${index}`,\n    'aria-controls': `vertical-tabpanel-${index}`,\n  };\n}\n\n/**\n * A dialog that lets users inspect the low level details of their entities.\n *\n * @public\n */\nexport function InspectEntityDialog(props: {\n  open: boolean;\n  entity: Entity;\n  onClose: () => void;\n}) {\n  const classes = useStyles();\n  const [activeTab, setActiveTab] = React.useState(0);\n\n  useEffect(() => {\n    setActiveTab(0);\n  }, [props.open]);\n\n  if (!props.entity) {\n    return null;\n  }\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth=\"xl\"\n      open={props.open}\n      onClose={props.onClose}\n      aria-labelledby=\"entity-inspector-dialog-title\"\n      PaperProps={{ className: classes.fullHeightDialog }}\n    >\n      <DialogTitle id=\"entity-inspector-dialog-title\">\n        Entity Inspector\n      </DialogTitle>\n      <DialogContent dividers>\n        <div className={classes.root}>\n          <Tabs\n            orientation=\"vertical\"\n            variant=\"scrollable\"\n            value={activeTab}\n            onChange={(_, newValue) => setActiveTab(newValue)}\n            aria-label=\"Inspector options\"\n            className={classes.tabs}\n          >\n            <Tab label=\"Overview\" {...a11yProps(0)} />\n            <Tab label=\"Ancestry\" {...a11yProps(1)} />\n            <Tab label=\"Colocated\" {...a11yProps(2)} />\n            <Tab label=\"Raw JSON\" {...a11yProps(3)} />\n            <Tab label=\"Raw YAML\" {...a11yProps(4)} />\n          </Tabs>\n\n          <TabPanel value={activeTab} index={0}>\n            <OverviewPage entity={props.entity} />\n          </TabPanel>\n          <TabPanel value={activeTab} index={1}>\n            <AncestryPage entity={props.entity} />\n          </TabPanel>\n          <TabPanel value={activeTab} index={2}>\n            <ColocatedPage entity={props.entity} />\n          </TabPanel>\n          <TabPanel value={activeTab} index={3}>\n            <JsonPage entity={props.entity} />\n          </TabPanel>\n          <TabPanel value={activeTab} index={4}>\n            <YamlPage entity={props.entity} />\n          </TabPanel>\n        </div>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={props.onClose} color=\"primary\">\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Entity,\n  CompoundEntityRef,\n  getCompoundEntityRef,\n  ANNOTATION_ORIGIN_LOCATION,\n} from '@backstage/catalog-model';\nimport { catalogApiRef } from '../../api';\nimport { useCallback } from 'react';\nimport useAsync from 'react-use/lib/useAsync';\nimport { useApi } from '@backstage/core-plugin-api';\n\n/**\n * Each distinct state that the dialog can be in at any given time.\n */\nexport type UseUnregisterEntityDialogState =\n  | {\n      type: 'loading';\n    }\n  | {\n      type: 'error';\n      error: Error;\n    }\n  | {\n      type: 'bootstrap';\n      location: string;\n      deleteEntity: () => Promise<void>;\n    }\n  | {\n      type: 'unregister';\n      location: string;\n      colocatedEntities: CompoundEntityRef[];\n      unregisterLocation: () => Promise<void>;\n      deleteEntity: () => Promise<void>;\n    }\n  | {\n      type: 'only-delete';\n      deleteEntity: () => Promise<void>;\n    };\n\n/**\n * Houses the main logic for unregistering entities and their locations.\n */\nexport function useUnregisterEntityDialogState(\n  entity: Entity,\n): UseUnregisterEntityDialogState {\n  const catalogApi = useApi(catalogApiRef);\n  const locationRef = entity.metadata.annotations?.[ANNOTATION_ORIGIN_LOCATION];\n  const uid = entity.metadata.uid;\n  const isBootstrap = locationRef === 'bootstrap:bootstrap';\n\n  // Load the prerequisite data: what entities that are colocated with us, and\n  // what location that spawned us\n  const prerequisites = useAsync(async () => {\n    const locationPromise = catalogApi.getLocationByRef(locationRef!);\n\n    let colocatedEntitiesPromise: Promise<Entity[]>;\n    if (!locationRef) {\n      colocatedEntitiesPromise = Promise.resolve([]);\n    } else {\n      const locationAnnotationFilter = `metadata.annotations.${ANNOTATION_ORIGIN_LOCATION}`;\n      colocatedEntitiesPromise = catalogApi\n        .getEntities({\n          filter: { [locationAnnotationFilter]: locationRef },\n          fields: [\n            'kind',\n            'metadata.uid',\n            'metadata.name',\n            'metadata.namespace',\n          ],\n        })\n        .then(response => response.items);\n    }\n\n    return Promise.all([locationPromise, colocatedEntitiesPromise]).then(\n      ([location, colocatedEntities]) => ({\n        location,\n        colocatedEntities,\n      }),\n    );\n  }, [catalogApi, entity]);\n\n  // Unregisters the underlying location which will remove all of the entities that are spawned from\n  // it. Can only ever be called when the prerequisites have finished loading successfully, and if\n  // there was a matching location.\n  const unregisterLocation = useCallback(\n    async function unregisterLocationFn() {\n      const { location } = prerequisites.value!;\n      await catalogApi.removeLocationById(location!.id);\n    },\n    [catalogApi, prerequisites],\n  );\n\n  // Just removes the entity, without affecting locations in any way.\n  const deleteEntity = useCallback(\n    async function deleteEntityFn() {\n      await catalogApi.removeEntityByUid(uid!);\n    },\n    [catalogApi, uid],\n  );\n\n  // If this is a bootstrap location entity, don't even block on loading\n  // prerequisites. We know that all that we will do is to offer to remove the\n  // entity, and that doesn't require anything from the prerequisites.\n  if (isBootstrap) {\n    return { type: 'bootstrap', location: locationRef!, deleteEntity };\n  }\n\n  // Return early if prerequisites still loading or failing\n  const { loading, error, value } = prerequisites;\n  if (loading) {\n    return { type: 'loading' };\n  } else if (error) {\n    return { type: 'error', error };\n  }\n\n  const { location, colocatedEntities } = value!;\n  if (!location) {\n    return { type: 'only-delete', deleteEntity };\n  }\n  return {\n    type: 'unregister',\n    location: locationRef!,\n    colocatedEntities: colocatedEntities.map(getCompoundEntityRef),\n    unregisterLocation,\n    deleteEntity,\n  };\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity } from '@backstage/catalog-model';\nimport { EntityRefLink } from '../EntityRefLink';\nimport {\n  Box,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Divider,\n  makeStyles,\n} from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport React, { useCallback, useState } from 'react';\nimport { useUnregisterEntityDialogState } from './useUnregisterEntityDialogState';\n\nimport { alertApiRef, configApiRef, useApi } from '@backstage/core-plugin-api';\nimport { Progress, ResponseErrorPanel } from '@backstage/core-components';\nimport { assertError } from '@backstage/errors';\n\nconst useStyles = makeStyles({\n  advancedButton: {\n    fontSize: '0.7em',\n  },\n});\n\nconst Contents = ({\n  entity,\n  onConfirm,\n}: {\n  entity: Entity;\n  onConfirm: () => any;\n}) => {\n  const alertApi = useApi(alertApiRef);\n  const configApi = useApi(configApiRef);\n  const classes = useStyles();\n  const state = useUnregisterEntityDialogState(entity);\n  const [showDelete, setShowDelete] = useState(false);\n  const [busy, setBusy] = useState(false);\n  const appTitle = configApi.getOptionalString('app.title') ?? 'Backstage';\n\n  const onUnregister = useCallback(\n    async function onUnregisterFn() {\n      if ('unregisterLocation' in state) {\n        setBusy(true);\n        try {\n          await state.unregisterLocation();\n          onConfirm();\n        } catch (err) {\n          assertError(err);\n          alertApi.post({ message: err.message });\n        } finally {\n          setBusy(false);\n        }\n      }\n    },\n    [alertApi, onConfirm, state],\n  );\n\n  const onDelete = useCallback(\n    async function onDeleteFn() {\n      if ('deleteEntity' in state) {\n        setBusy(true);\n        try {\n          await state.deleteEntity();\n          onConfirm();\n        } catch (err) {\n          assertError(err);\n          alertApi.post({ message: err.message });\n        } finally {\n          setBusy(false);\n        }\n      }\n    },\n    [alertApi, onConfirm, state],\n  );\n\n  if (state.type === 'loading') {\n    return <Progress />;\n  }\n\n  if (state.type === 'error') {\n    return <ResponseErrorPanel error={state.error} />;\n  }\n\n  if (state.type === 'bootstrap') {\n    return (\n      <>\n        <Alert severity=\"info\">\n          You cannot unregister this entity, since it originates from a\n          protected Backstage configuration (location \"{state.location}\"). If\n          you believe this is in error, please contact the {appTitle}{' '}\n          integrator.\n        </Alert>\n\n        <Box marginTop={2}>\n          {!showDelete && (\n            <Button\n              variant=\"text\"\n              size=\"small\"\n              color=\"primary\"\n              className={classes.advancedButton}\n              onClick={() => setShowDelete(true)}\n            >\n              Advanced Options\n            </Button>\n          )}\n\n          {showDelete && (\n            <>\n              <DialogContentText>\n                You have the option to delete the entity itself from the\n                catalog. Note that this should only be done if you know that the\n                catalog file has been deleted at, or moved from, its origin\n                location. If that is not the case, the entity will reappear\n                shortly as the next refresh round is performed by the catalog.\n              </DialogContentText>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                disabled={busy}\n                onClick={onDelete}\n              >\n                Delete Entity\n              </Button>\n            </>\n          )}\n        </Box>\n      </>\n    );\n  }\n\n  if (state.type === 'only-delete') {\n    return (\n      <>\n        <DialogContentText>\n          This entity does not seem to originate from a registered location. You\n          therefore only have the option to delete it outright from the catalog.\n        </DialogContentText>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          disabled={busy}\n          onClick={onDelete}\n        >\n          Delete Entity\n        </Button>\n      </>\n    );\n  }\n\n  if (state.type === 'unregister') {\n    return (\n      <>\n        <DialogContentText>\n          This action will unregister the following entities:\n        </DialogContentText>\n        <DialogContentText component=\"ul\">\n          {state.colocatedEntities.map(e => (\n            <li key={`${e.kind}:${e.namespace}/${e.name}`}>\n              <EntityRefLink entityRef={e} />\n            </li>\n          ))}\n        </DialogContentText>\n        <DialogContentText>\n          Located at the following location:\n        </DialogContentText>\n        <DialogContentText component=\"ul\">\n          <li>{state.location}</li>\n        </DialogContentText>\n        <DialogContentText>\n          To undo, just re-register the entity in {appTitle}.\n        </DialogContentText>\n        <Box marginTop={2}>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            disabled={busy}\n            onClick={onUnregister}\n          >\n            Unregister Location\n          </Button>\n          {!showDelete && (\n            <Box component=\"span\" marginLeft={2}>\n              <Button\n                variant=\"text\"\n                size=\"small\"\n                color=\"primary\"\n                className={classes.advancedButton}\n                onClick={() => setShowDelete(true)}\n              >\n                Advanced Options\n              </Button>\n            </Box>\n          )}\n        </Box>\n\n        {showDelete && (\n          <>\n            <Box paddingTop={4} paddingBottom={4}>\n              <Divider />\n            </Box>\n            <DialogContentText>\n              You also have the option to delete the entity itself from the\n              catalog. Note that this should only be done if you know that the\n              catalog file has been deleted at, or moved from, its origin\n              location. If that is not the case, the entity will reappear\n              shortly as the next refresh round is performed by the catalog.\n            </DialogContentText>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              disabled={busy}\n              onClick={onDelete}\n            >\n              Delete Entity\n            </Button>\n          </>\n        )}\n      </>\n    );\n  }\n\n  return <Alert severity=\"error\">Internal error: Unknown state</Alert>;\n};\n\n/** @public */\nexport type UnregisterEntityDialogProps = {\n  open: boolean;\n  onConfirm: () => any;\n  onClose: () => any;\n  entity: Entity;\n};\n\n/** @public */\nexport const UnregisterEntityDialog = (props: UnregisterEntityDialogProps) => {\n  const { open, onConfirm, onClose, entity } = props;\n  return (\n    <Dialog open={open} onClose={onClose}>\n      <DialogTitle id=\"responsive-dialog-title\">\n        Are you sure you want to unregister this entity?\n      </DialogTitle>\n      <DialogContent>\n        <Contents entity={entity} onConfirm={onConfirm} />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose} color=\"primary\">\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  configApiRef,\n  IconComponent,\n  useApi,\n} from '@backstage/core-plugin-api';\nimport {\n  Card,\n  List,\n  ListItemIcon,\n  ListItemSecondaryAction,\n  ListItemText,\n  makeStyles,\n  MenuItem,\n  Theme,\n  Typography,\n} from '@material-ui/core';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport StarIcon from '@material-ui/icons/Star';\nimport { compact } from 'lodash';\nimport React, { Fragment, useEffect, useMemo, useState } from 'react';\nimport { UserListFilter } from '../../filters';\nimport {\n  useEntityList,\n  useStarredEntities,\n  useEntityOwnership,\n} from '../../hooks';\nimport { UserListFilterKind } from '../../types';\nimport { reduceEntityFilters } from '../../utils';\n\n/** @public */\nexport type CatalogReactUserListPickerClassKey =\n  | 'root'\n  | 'title'\n  | 'listIcon'\n  | 'menuItem'\n  | 'groupWrapper';\n\nconst useStyles = makeStyles<Theme>(\n  theme => ({\n    root: {\n      backgroundColor: 'rgba(0, 0, 0, .11)',\n      boxShadow: 'none',\n      margin: theme.spacing(1, 0, 1, 0),\n    },\n    title: {\n      margin: theme.spacing(1, 0, 0, 1),\n      textTransform: 'uppercase',\n      fontSize: 12,\n      fontWeight: 'bold',\n    },\n    listIcon: {\n      minWidth: 30,\n      color: theme.palette.text.primary,\n    },\n    menuItem: {\n      minHeight: theme.spacing(6),\n    },\n    groupWrapper: {\n      margin: theme.spacing(1, 1, 2, 1),\n    },\n  }),\n  {\n    name: 'CatalogReactUserListPicker',\n  },\n);\n\nexport type ButtonGroup = {\n  name: string;\n  items: {\n    id: 'owned' | 'starred' | 'all';\n    label: string;\n    icon?: IconComponent;\n  }[];\n};\n\nfunction getFilterGroups(orgName: string | undefined): ButtonGroup[] {\n  return [\n    {\n      name: 'Personal',\n      items: [\n        {\n          id: 'owned',\n          label: 'Owned',\n          icon: SettingsIcon,\n        },\n        {\n          id: 'starred',\n          label: 'Starred',\n          icon: StarIcon,\n        },\n      ],\n    },\n    {\n      name: orgName ?? 'Company',\n      items: [\n        {\n          id: 'all',\n          label: 'All',\n        },\n      ],\n    },\n  ];\n}\n\n/** @public */\nexport type UserListPickerProps = {\n  initialFilter?: UserListFilterKind;\n  availableFilters?: UserListFilterKind[];\n};\n\n/** @public */\nexport const UserListPicker = (props: UserListPickerProps) => {\n  const { initialFilter, availableFilters } = props;\n  const classes = useStyles();\n  const configApi = useApi(configApiRef);\n  const orgName = configApi.getOptionalString('organization.name') ?? 'Company';\n  const {\n    filters,\n    updateFilters,\n    backendEntities,\n    queryParameters: { kind: kindParameter, user: userParameter },\n    loading: loadingBackendEntities,\n  } = useEntityList();\n\n  // Remove group items that aren't in availableFilters and exclude\n  // any now-empty groups.\n  const userAndGroupFilterIds = ['starred', 'all'];\n  const filterGroups = getFilterGroups(orgName)\n    .map(filterGroup => ({\n      ...filterGroup,\n      items: filterGroup.items.filter(({ id }) =>\n        // TODO: avoid hardcoding kinds here\n        ['group', 'user'].some(kind => kind === kindParameter)\n          ? userAndGroupFilterIds.includes(id)\n          : !availableFilters || availableFilters.includes(id),\n      ),\n    }))\n    .filter(({ items }) => !!items.length);\n\n  const { isStarredEntity } = useStarredEntities();\n  const { isOwnedEntity, loading: loadingEntityOwnership } =\n    useEntityOwnership();\n\n  const loading = loadingBackendEntities || loadingEntityOwnership;\n\n  // Static filters; used for generating counts of potentially unselected kinds\n  const ownedFilter = useMemo(\n    () => new UserListFilter('owned', isOwnedEntity, isStarredEntity),\n    [isOwnedEntity, isStarredEntity],\n  );\n  const starredFilter = useMemo(\n    () => new UserListFilter('starred', isOwnedEntity, isStarredEntity),\n    [isOwnedEntity, isStarredEntity],\n  );\n\n  const queryParamUserFilter = useMemo(\n    () => [userParameter].flat()[0],\n    [userParameter],\n  );\n\n  const [selectedUserFilter, setSelectedUserFilter] = useState(\n    queryParamUserFilter ?? initialFilter,\n  );\n\n  // To show proper counts for each section, apply all other frontend filters _except_ the user\n  // filter that's controlled by this picker.\n  const entitiesWithoutUserFilter = useMemo(\n    () =>\n      backendEntities.filter(\n        reduceEntityFilters(\n          compact(Object.values({ ...filters, user: undefined })),\n        ),\n      ),\n    [filters, backendEntities],\n  );\n\n  const filterCounts = useMemo<Record<string, number>>(\n    () => ({\n      all: entitiesWithoutUserFilter.length,\n      starred: entitiesWithoutUserFilter.filter(entity =>\n        starredFilter.filterEntity(entity),\n      ).length,\n      owned: entitiesWithoutUserFilter.filter(entity =>\n        ownedFilter.filterEntity(entity),\n      ).length,\n    }),\n    [entitiesWithoutUserFilter, starredFilter, ownedFilter],\n  );\n\n  // Set selected user filter on query parameter updates; this happens at initial page load and from\n  // external updates to the page location.\n  useEffect(() => {\n    if (queryParamUserFilter) {\n      setSelectedUserFilter(queryParamUserFilter as UserListFilterKind);\n    }\n  }, [queryParamUserFilter]);\n\n  useEffect(() => {\n    if (\n      !loading &&\n      !!selectedUserFilter &&\n      selectedUserFilter !== 'all' &&\n      filterCounts[selectedUserFilter] === 0\n    ) {\n      setSelectedUserFilter('all');\n    }\n  }, [loading, filterCounts, selectedUserFilter, setSelectedUserFilter]);\n\n  useEffect(() => {\n    updateFilters({\n      user: selectedUserFilter\n        ? new UserListFilter(\n            selectedUserFilter as UserListFilterKind,\n            isOwnedEntity,\n            isStarredEntity,\n          )\n        : undefined,\n    });\n  }, [selectedUserFilter, isOwnedEntity, isStarredEntity, updateFilters]);\n\n  return (\n    <Card className={classes.root}>\n      {filterGroups.map(group => (\n        <Fragment key={group.name}>\n          <Typography\n            variant=\"subtitle2\"\n            component=\"span\"\n            className={classes.title}\n          >\n            {group.name}\n          </Typography>\n          <Card className={classes.groupWrapper}>\n            <List disablePadding dense role=\"menu\" aria-label={group.name}>\n              {group.items.map(item => (\n                <MenuItem\n                  role=\"none presentation\"\n                  key={item.id}\n                  button\n                  divider\n                  onClick={() => setSelectedUserFilter(item.id)}\n                  selected={item.id === filters.user?.value}\n                  className={classes.menuItem}\n                  disabled={filterCounts[item.id] === 0}\n                  data-testid={`user-picker-${item.id}`}\n                  tabIndex={0}\n                  ContainerProps={{ role: 'menuitem' }}\n                >\n                  {item.icon && (\n                    <ListItemIcon className={classes.listIcon}>\n                      <item.icon fontSize=\"small\" />\n                    </ListItemIcon>\n                  )}\n                  <ListItemText>\n                    <Typography variant=\"body1\">{item.label} </Typography>\n                  </ListItemText>\n                  <ListItemSecondaryAction>\n                    {filterCounts[item.id] ?? '-'}\n                  </ListItemSecondaryAction>\n                </MenuItem>\n              ))}\n            </List>\n          </Card>\n        </Fragment>\n      ))}\n    </Card>\n  );\n};\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { EntityErrorFilter, EntityOrphanFilter } from '../../filters';\nimport {\n  Box,\n  Checkbox,\n  FormControlLabel,\n  makeStyles,\n  TextField,\n  Typography,\n} from '@material-ui/core';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport React, { useState } from 'react';\nimport { useEntityList } from '../../hooks';\nimport { Autocomplete } from '@material-ui/lab';\n\n/** @public */\nexport type CatalogReactEntityProcessingStatusPickerClassKey = 'input';\n\nconst useStyles = makeStyles(\n  {\n    input: {},\n  },\n  {\n    name: 'CatalogReactEntityProcessingStatusPickerPicker',\n  },\n);\n\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\n\n/** @public */\nexport const EntityProcessingStatusPicker = () => {\n  const classes = useStyles();\n  const { updateFilters } = useEntityList();\n\n  const [selectedAdvancedItems, setSelectedAdvancedItems] = useState<string[]>(\n    [],\n  );\n\n  function orphanChange(value: boolean) {\n    updateFilters({\n      orphan: value ? new EntityOrphanFilter(value) : undefined,\n    });\n  }\n\n  function errorChange(value: boolean) {\n    updateFilters({\n      error: value ? new EntityErrorFilter(value) : undefined,\n    });\n  }\n\n  const availableAdvancedItems = ['Is Orphan', 'Has Error'];\n\n  return (\n    <Box pb={1} pt={1}>\n      <Typography variant=\"button\" component=\"label\">\n        Processing Status\n        <Autocomplete\n          multiple\n          options={availableAdvancedItems}\n          value={selectedAdvancedItems}\n          onChange={(_: object, value: string[]) => {\n            setSelectedAdvancedItems(value);\n            orphanChange(value.includes('Is Orphan'));\n            errorChange(value.includes('Has Error'));\n          }}\n          renderOption={(option, { selected }) => (\n            <FormControlLabel\n              control={\n                <Checkbox\n                  icon={icon}\n                  checkedIcon={checkedIcon}\n                  checked={selected}\n                />\n              }\n              label={option}\n            />\n          )}\n          size=\"small\"\n          popupIcon={\n            <ExpandMoreIcon data-testid=\"processing-status-picker-expand\" />\n          }\n          renderInput={params => (\n            <TextField\n              {...params}\n              className={classes.input}\n              variant=\"outlined\"\n            />\n          )}\n        />\n      </Typography>\n    </Box>\n  );\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, {\n  PropsWithChildren,\n  useCallback,\n  useMemo,\n  useState,\n} from 'react';\nimport {\n  DefaultEntityFilters,\n  EntityListContext,\n  EntityListContextProps,\n} from '../hooks/useEntityListProvider';\n\n/** @public */\nexport const MockEntityListContextProvider = ({\n  children,\n  value,\n}: PropsWithChildren<{\n  value?: Partial<EntityListContextProps>;\n}>) => {\n  // Provides a default implementation that stores filter state, for testing components that\n  // reflect filter state.\n  const [filters, setFilters] = useState<DefaultEntityFilters>(\n    value?.filters ?? {},\n  );\n\n  const updateFilters = useCallback(\n    (\n      update:\n        | Partial<DefaultEntityFilters>\n        | ((\n            prevFilters: DefaultEntityFilters,\n          ) => Partial<DefaultEntityFilters>),\n    ) => {\n      setFilters(prevFilters => {\n        const newFilters =\n          typeof update === 'function' ? update(prevFilters) : update;\n        return { ...prevFilters, ...newFilters };\n      });\n    },\n    [],\n  );\n\n  // Memoize the default values since pickers have useEffect triggers on these; naively defaulting\n  // below with `?? <X>` breaks referential equality on subsequent updates.\n  const defaultValues = useMemo(\n    () => ({\n      entities: [],\n      backendEntities: [],\n      queryParameters: {},\n    }),\n    [],\n  );\n\n  const resolvedValue: EntityListContextProps = useMemo(\n    () => ({\n      entities: value?.entities ?? defaultValues.entities,\n      backendEntities: value?.backendEntities ?? defaultValues.backendEntities,\n      updateFilters: value?.updateFilters ?? updateFilters,\n      filters,\n      loading: value?.loading ?? false,\n      queryParameters: value?.queryParameters ?? defaultValues.queryParameters,\n      error: value?.error,\n    }),\n    [value, defaultValues, filters, updateFilters],\n  );\n\n  return (\n    <EntityListContext.Provider value={resolvedValue}>\n      {children}\n    </EntityListContext.Provider>\n  );\n};\n"],"names":["theme","isEqual","_a","getEntityRef","_b","useStyles","icon","checkedIcon","MuiListItemText","MuiListSubheader","Contents","groupBy","DialogContentText","location","colocatedEntities","Alert","StarIcon","ListItemText"],"mappings":"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"}