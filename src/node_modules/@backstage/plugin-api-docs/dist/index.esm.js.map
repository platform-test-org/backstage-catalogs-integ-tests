{"version":3,"file":"index.esm.js","sources":["../src/routes.ts","../src/components/ApiExplorerPage/DefaultApiExplorerPage.tsx","../src/components/ApiExplorerPage/ApiExplorerPage.tsx","../src/config.ts","../src/components/PlainApiDefinitionWidget/PlainApiDefinitionWidget.tsx","../src/components/ApiDefinitionCard/ApiDefinitionCard.tsx","../src/components/AsyncApiDefinitionWidget/AsyncApiDefinitionWidget.tsx","../src/components/GraphQlDefinitionWidget/GraphQlDefinitionWidget.tsx","../src/components/OpenApiDefinitionWidget/OpenApiDefinitionWidget.tsx","../src/components/GrpcApiDefinitionWidget/GrpcApiDefinitionWidget.tsx","../src/components/ApiDefinitionCard/ApiDefinitionWidget.tsx","../src/components/ApiDefinitionCard/ApiTypeTitle.tsx","../src/components/ApisCards/presets.tsx","../src/components/ApisCards/ConsumedApisCard.tsx","../src/components/ApisCards/HasApisCard.tsx","../src/components/ApisCards/ProvidedApisCard.tsx","../src/components/ComponentsCards/ConsumingComponentsCard.tsx","../src/components/ComponentsCards/ProvidingComponentsCard.tsx","../src/plugin.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  createExternalRouteRef,\n  createRouteRef,\n} from '@backstage/core-plugin-api';\n\nexport const rootRoute = createRouteRef({\n  id: 'api-docs',\n});\n\nexport const registerComponentRouteRef = createExternalRouteRef({\n  id: 'register-component',\n  optional: true,\n});\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Content,\n  ContentHeader,\n  CreateButton,\n  PageWithHeader,\n  SupportButton,\n  TableColumn,\n  TableProps,\n} from '@backstage/core-components';\nimport { configApiRef, useApi, useRouteRef } from '@backstage/core-plugin-api';\nimport { CatalogTable, CatalogTableRow } from '@backstage/plugin-catalog';\nimport {\n  EntityKindPicker,\n  EntityLifecyclePicker,\n  EntityListProvider,\n  EntityOwnerPicker,\n  EntityTagPicker,\n  EntityTypePicker,\n  UserListFilterKind,\n  UserListPicker,\n  CatalogFilterLayout,\n} from '@backstage/plugin-catalog-react';\nimport React from 'react';\nimport { registerComponentRouteRef } from '../../routes';\n\nconst defaultColumns: TableColumn<CatalogTableRow>[] = [\n  CatalogTable.columns.createTitleColumn({ hidden: true }),\n  CatalogTable.columns.createNameColumn({ defaultKind: 'API' }),\n  CatalogTable.columns.createSystemColumn(),\n  CatalogTable.columns.createOwnerColumn(),\n  CatalogTable.columns.createSpecTypeColumn(),\n  CatalogTable.columns.createSpecLifecycleColumn(),\n  CatalogTable.columns.createMetadataDescriptionColumn(),\n  CatalogTable.columns.createTagsColumn(),\n];\n\n/**\n * DefaultApiExplorerPageProps\n * @public\n */\nexport type DefaultApiExplorerPageProps = {\n  initiallySelectedFilter?: UserListFilterKind;\n  columns?: TableColumn<CatalogTableRow>[];\n  actions?: TableProps<CatalogTableRow>['actions'];\n};\n\n/**\n * DefaultApiExplorerPage\n * @public\n */\nexport const DefaultApiExplorerPage = (props: DefaultApiExplorerPageProps) => {\n  const { initiallySelectedFilter = 'all', columns, actions } = props;\n\n  const configApi = useApi(configApiRef);\n  const generatedSubtitle = `${\n    configApi.getOptionalString('organization.name') ?? 'Backstage'\n  } API Explorer`;\n  const registerComponentLink = useRouteRef(registerComponentRouteRef);\n\n  return (\n    <PageWithHeader\n      themeId=\"apis\"\n      title=\"APIs\"\n      subtitle={generatedSubtitle}\n      pageTitleOverride=\"APIs\"\n    >\n      <Content>\n        <ContentHeader title=\"\">\n          <CreateButton\n            title=\"Register Existing API\"\n            to={registerComponentLink?.()}\n          />\n          <SupportButton>All your APIs</SupportButton>\n        </ContentHeader>\n        <EntityListProvider>\n          <CatalogFilterLayout>\n            <CatalogFilterLayout.Filters>\n              <EntityKindPicker initialFilter=\"api\" hidden />\n              <EntityTypePicker />\n              <UserListPicker initialFilter={initiallySelectedFilter} />\n              <EntityOwnerPicker />\n              <EntityLifecyclePicker />\n              <EntityTagPicker />\n            </CatalogFilterLayout.Filters>\n            <CatalogFilterLayout.Content>\n              <CatalogTable\n                columns={columns || defaultColumns}\n                actions={actions}\n              />\n            </CatalogFilterLayout.Content>\n          </CatalogFilterLayout>\n        </EntityListProvider>\n      </Content>\n    </PageWithHeader>\n  );\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport { useOutlet } from 'react-router';\nimport {\n  DefaultApiExplorerPage,\n  DefaultApiExplorerPageProps,\n} from './DefaultApiExplorerPage';\n\n/**\n * ApiExplorerPage\n * @public\n */\nexport const ApiExplorerPage = (props: DefaultApiExplorerPageProps) => {\n  const outlet = useOutlet();\n\n  return outlet || <DefaultApiExplorerPage {...props} />;\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ApiEntity } from '@backstage/catalog-model';\nimport { ApiDefinitionWidget } from './components/ApiDefinitionCard/ApiDefinitionWidget';\nimport { createApiRef } from '@backstage/core-plugin-api';\n\n/** @public */\nexport const apiDocsConfigRef = createApiRef<ApiDocsConfig>({\n  id: 'plugin.api-docs.config',\n});\n\n/** @public */\nexport interface ApiDocsConfig {\n  getApiDefinitionWidget: (\n    apiEntity: ApiEntity,\n  ) => ApiDefinitionWidget | undefined;\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport { CodeSnippet } from '@backstage/core-components';\n\n/** @public */\nexport type PlainApiDefinitionWidgetProps = {\n  definition: any;\n  language: string;\n};\n\n/** @public */\nexport const PlainApiDefinitionWidget = (\n  props: PlainApiDefinitionWidgetProps,\n) => {\n  return (\n    <CodeSnippet\n      text={props.definition}\n      language={props.language}\n      showCopyCodeButton\n    />\n  );\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ApiEntity } from '@backstage/catalog-model';\nimport { useEntity } from '@backstage/plugin-catalog-react';\nimport { Alert } from '@material-ui/lab';\nimport React from 'react';\nimport { apiDocsConfigRef } from '../../config';\nimport { PlainApiDefinitionWidget } from '../PlainApiDefinitionWidget';\n\nimport { CardTab, TabbedCard } from '@backstage/core-components';\nimport { useApi } from '@backstage/core-plugin-api';\n\n/** @public */\nexport const ApiDefinitionCard = () => {\n  const { entity } = useEntity<ApiEntity>();\n  const config = useApi(apiDocsConfigRef);\n  const { getApiDefinitionWidget } = config;\n\n  if (!entity) {\n    return <Alert severity=\"error\">Could not fetch the API</Alert>;\n  }\n\n  const definitionWidget = getApiDefinitionWidget(entity);\n  const entityTitle = entity.metadata.title ?? entity.metadata.name;\n\n  if (definitionWidget) {\n    return (\n      <TabbedCard title={entityTitle}>\n        <CardTab label={definitionWidget.title} key=\"widget\">\n          {definitionWidget.component(entity.spec.definition)}\n        </CardTab>\n        <CardTab label=\"Raw\" key=\"raw\">\n          <PlainApiDefinitionWidget\n            definition={entity.spec.definition}\n            language={definitionWidget.rawLanguage || entity.spec.type}\n          />\n        </CardTab>\n      </TabbedCard>\n    );\n  }\n\n  return (\n    <TabbedCard\n      title={entityTitle}\n      children={[\n        // Has to be an array, otherwise typescript doesn't like that this has only a single child\n        <CardTab label={entity.spec.type} key=\"raw\">\n          <PlainApiDefinitionWidget\n            definition={entity.spec.definition}\n            language={entity.spec.type}\n          />\n        </CardTab>,\n      ]}\n    />\n  );\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Progress } from '@backstage/core-components';\nimport React, { Suspense } from 'react';\n\n// The asyncapi component and related CSS has a significant size, only load it\n// if the element is actually used.\nconst LazyAsyncApiDefinition = React.lazy(() =>\n  import('./AsyncApiDefinition').then(m => ({\n    default: m.AsyncApiDefinition,\n  })),\n);\n\n/** @public */\nexport type AsyncApiDefinitionWidgetProps = {\n  definition: string;\n};\n\n/** @public */\nexport const AsyncApiDefinitionWidget = (\n  props: AsyncApiDefinitionWidgetProps,\n) => {\n  return (\n    <Suspense fallback={<Progress />}>\n      <LazyAsyncApiDefinition {...props} />\n    </Suspense>\n  );\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Progress } from '@backstage/core-components';\nimport React, { Suspense } from 'react';\n\n// The graphql component, graphql and related CSS has a significant size, only\n// load it if the element is actually used.\nconst LazyGraphQlDefinition = React.lazy(() =>\n  import('./GraphQlDefinition').then(m => ({\n    default: m.GraphQlDefinition,\n  })),\n);\n\n/** @public */\nexport type GraphQlDefinitionWidgetProps = {\n  definition: string;\n};\n\n/** @public */\nexport const GraphQlDefinitionWidget = (\n  props: GraphQlDefinitionWidgetProps,\n) => {\n  return (\n    <Suspense fallback={<Progress />}>\n      <LazyGraphQlDefinition {...props} />\n    </Suspense>\n  );\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Progress } from '@backstage/core-components';\nimport React, { Suspense } from 'react';\n\n// The swagger-ui component and related CSS has a significant size, only load it\n// if the element is actually used.\nconst LazyOpenApiDefinition = React.lazy(() =>\n  import('./OpenApiDefinition').then(m => ({\n    default: m.OpenApiDefinition,\n  })),\n);\n\n/** @public */\nexport type OpenApiDefinitionWidgetProps = {\n  definition: string;\n};\n\n/** @public */\nexport const OpenApiDefinitionWidget = (\n  props: OpenApiDefinitionWidgetProps,\n) => {\n  return (\n    <Suspense fallback={<Progress />}>\n      <LazyOpenApiDefinition {...props} />\n    </Suspense>\n  );\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport { CodeSnippet } from '@backstage/core-components';\nimport { useTheme } from '@material-ui/core/styles';\nimport { BackstageTheme } from '@backstage/theme';\n\n/** @public */\nexport type GrpcApiDefinitionWidgetProps = {\n  definition: string;\n};\n\n/** @public */\nexport const GrpcApiDefinitionWidget = (\n  props: GrpcApiDefinitionWidgetProps,\n) => {\n  const theme = useTheme<BackstageTheme>();\n  return (\n    <CodeSnippet\n      customStyle={{ backgroundColor: theme.palette.background.default }}\n      text={props.definition}\n      language=\"protobuf\"\n      showCopyCodeButton\n    />\n  );\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from 'react';\nimport { AsyncApiDefinitionWidget } from '../AsyncApiDefinitionWidget';\nimport { GraphQlDefinitionWidget } from '../GraphQlDefinitionWidget';\nimport { OpenApiDefinitionWidget } from '../OpenApiDefinitionWidget';\nimport { GrpcApiDefinitionWidget } from '../GrpcApiDefinitionWidget';\n\n/** @public */\nexport type ApiDefinitionWidget = {\n  type: string;\n  title: string;\n  component: (definition: string) => React.ReactElement;\n  rawLanguage?: string;\n};\n\n/** @public */\nexport function defaultDefinitionWidgets(): ApiDefinitionWidget[] {\n  return [\n    {\n      type: 'openapi',\n      title: 'OpenAPI',\n      rawLanguage: 'yaml',\n      component: definition => (\n        <OpenApiDefinitionWidget definition={definition} />\n      ),\n    },\n    {\n      type: 'asyncapi',\n      title: 'AsyncAPI',\n      rawLanguage: 'yaml',\n      component: definition => (\n        <AsyncApiDefinitionWidget definition={definition} />\n      ),\n    },\n    {\n      type: 'graphql',\n      title: 'GraphQL',\n      rawLanguage: 'graphql',\n      component: definition => (\n        <GraphQlDefinitionWidget definition={definition} />\n      ),\n    },\n    {\n      type: 'grpc',\n      title: 'gRPC',\n      component: definition => (\n        <GrpcApiDefinitionWidget definition={definition} />\n      ),\n    },\n  ];\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ApiEntity } from '@backstage/catalog-model';\nimport React from 'react';\nimport { apiDocsConfigRef } from '../../config';\nimport { useApi } from '@backstage/core-plugin-api';\n\n/**\n * @public\n */\nexport const ApiTypeTitle = (props: { apiEntity: ApiEntity }) => {\n  const { apiEntity } = props;\n  const config = useApi(apiDocsConfigRef);\n  const definition = config.getApiDefinitionWidget(apiEntity);\n  const type = definition ? definition.title : apiEntity.spec.type;\n\n  return <span>{type}</span>;\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ApiEntity } from '@backstage/catalog-model';\nimport { EntityTable } from '@backstage/plugin-catalog-react';\nimport React from 'react';\nimport { ApiTypeTitle } from '../ApiDefinitionCard';\nimport { TableColumn } from '@backstage/core-components';\n\nexport function createSpecApiTypeColumn(): TableColumn<ApiEntity> {\n  return {\n    title: 'Type',\n    field: 'spec.type',\n    render: entity => <ApiTypeTitle apiEntity={entity} />,\n  };\n}\n\n// TODO: This could be moved to plugin-catalog-react if we wouldn't have a\n// special createSpecApiTypeColumn. But this is required to use ApiTypeTitle to\n// resolve the display name of an entity. Is the display name really worth it?\n\nexport const apiEntityColumns: TableColumn<ApiEntity>[] = [\n  EntityTable.columns.createEntityRefColumn({ defaultKind: 'API' }),\n  EntityTable.columns.createSystemColumn(),\n  EntityTable.columns.createOwnerColumn(),\n  createSpecApiTypeColumn(),\n  EntityTable.columns.createSpecLifecycleColumn(),\n  EntityTable.columns.createMetadataDescriptionColumn(),\n];\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ApiEntity, RELATION_CONSUMES_API } from '@backstage/catalog-model';\nimport { Typography } from '@material-ui/core';\nimport {\n  EntityTable,\n  useEntity,\n  useRelatedEntities,\n} from '@backstage/plugin-catalog-react';\nimport React from 'react';\nimport { apiEntityColumns } from './presets';\nimport {\n  CodeSnippet,\n  InfoCard,\n  InfoCardVariants,\n  Link,\n  Progress,\n  WarningPanel,\n} from '@backstage/core-components';\n\n/**\n * @public\n */\nexport const ConsumedApisCard = (props: { variant?: InfoCardVariants }) => {\n  const { variant = 'gridItem' } = props;\n  const { entity } = useEntity();\n  const { entities, loading, error } = useRelatedEntities(entity, {\n    type: RELATION_CONSUMES_API,\n  });\n\n  if (loading) {\n    return (\n      <InfoCard variant={variant} title=\"Consumed APIs\">\n        <Progress />\n      </InfoCard>\n    );\n  }\n\n  if (error || !entities) {\n    return (\n      <InfoCard variant={variant} title=\"Consumed APIs\">\n        <WarningPanel\n          severity=\"error\"\n          title=\"Could not load APIs\"\n          message={<CodeSnippet text={`${error}`} language=\"text\" />}\n        />\n      </InfoCard>\n    );\n  }\n\n  return (\n    <EntityTable\n      title=\"Consumed APIs\"\n      variant={variant}\n      emptyContent={\n        <div style={{ textAlign: 'center' }}>\n          <Typography variant=\"body1\">\n            This {entity.kind.toLocaleLowerCase('en-US')} does not consume any\n            APIs.\n          </Typography>\n          <Typography variant=\"body2\">\n            <Link to=\"https://backstage.io/docs/features/software-catalog/descriptor-format#specconsumesapis-optional\">\n              Learn how to change this.\n            </Link>\n          </Typography>\n        </div>\n      }\n      columns={apiEntityColumns}\n      entities={entities as ApiEntity[]}\n    />\n  );\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ApiEntity, RELATION_HAS_PART } from '@backstage/catalog-model';\nimport { Typography } from '@material-ui/core';\nimport {\n  EntityTable,\n  useEntity,\n  useRelatedEntities,\n} from '@backstage/plugin-catalog-react';\nimport React from 'react';\nimport { createSpecApiTypeColumn } from './presets';\nimport {\n  CodeSnippet,\n  InfoCard,\n  InfoCardVariants,\n  Link,\n  Progress,\n  TableColumn,\n  WarningPanel,\n} from '@backstage/core-components';\n\nconst columns: TableColumn<ApiEntity>[] = [\n  EntityTable.columns.createEntityRefColumn({ defaultKind: 'API' }),\n  EntityTable.columns.createOwnerColumn(),\n  createSpecApiTypeColumn(),\n  EntityTable.columns.createSpecLifecycleColumn(),\n  EntityTable.columns.createMetadataDescriptionColumn(),\n];\n\n/**\n * @public\n */\nexport const HasApisCard = (props: { variant?: InfoCardVariants }) => {\n  const { variant = 'gridItem' } = props;\n  const { entity } = useEntity();\n  const { entities, loading, error } = useRelatedEntities(entity, {\n    type: RELATION_HAS_PART,\n    kind: 'API',\n  });\n\n  if (loading) {\n    return (\n      <InfoCard variant={variant} title=\"APIs\">\n        <Progress />\n      </InfoCard>\n    );\n  }\n\n  if (error || !entities) {\n    return (\n      <InfoCard variant={variant} title=\"APIs\">\n        <WarningPanel\n          severity=\"error\"\n          title=\"Could not load APIs\"\n          message={<CodeSnippet text={`${error}`} language=\"text\" />}\n        />\n      </InfoCard>\n    );\n  }\n\n  return (\n    <EntityTable\n      title=\"APIs\"\n      variant={variant}\n      emptyContent={\n        <div style={{ textAlign: 'center' }}>\n          <Typography variant=\"body1\">\n            This {entity.kind.toLocaleLowerCase('en-US')} does not contain any\n            APIs.\n          </Typography>\n          <Typography variant=\"body2\">\n            <Link to=\"https://backstage.io/docs/features/software-catalog/descriptor-format#kind-api\">\n              Learn how to change this.\n            </Link>\n          </Typography>\n        </div>\n      }\n      columns={columns}\n      entities={entities as ApiEntity[]}\n    />\n  );\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ApiEntity, RELATION_PROVIDES_API } from '@backstage/catalog-model';\nimport { Typography } from '@material-ui/core';\nimport {\n  EntityTable,\n  useEntity,\n  useRelatedEntities,\n} from '@backstage/plugin-catalog-react';\nimport React from 'react';\nimport { apiEntityColumns } from './presets';\nimport {\n  CodeSnippet,\n  InfoCard,\n  InfoCardVariants,\n  Link,\n  Progress,\n  WarningPanel,\n} from '@backstage/core-components';\n\n/**\n * @public\n */\nexport const ProvidedApisCard = (props: { variant?: InfoCardVariants }) => {\n  const { variant = 'gridItem' } = props;\n  const { entity } = useEntity();\n  const { entities, loading, error } = useRelatedEntities(entity, {\n    type: RELATION_PROVIDES_API,\n  });\n\n  if (loading) {\n    return (\n      <InfoCard variant={variant} title=\"Provided APIs\">\n        <Progress />\n      </InfoCard>\n    );\n  }\n\n  if (error || !entities) {\n    return (\n      <InfoCard variant={variant} title=\"Provided APIs\">\n        <WarningPanel\n          severity=\"error\"\n          title=\"Could not load APIs\"\n          message={<CodeSnippet text={`${error}`} language=\"text\" />}\n        />\n      </InfoCard>\n    );\n  }\n\n  return (\n    <EntityTable\n      title=\"Provided APIs\"\n      variant={variant}\n      emptyContent={\n        <div style={{ textAlign: 'center' }}>\n          <Typography variant=\"body1\">\n            This {entity.kind.toLocaleLowerCase('en-US')} does not provide any\n            APIs.\n          </Typography>\n          <Typography variant=\"body2\">\n            <Link to=\"https://backstage.io/docs/features/software-catalog/descriptor-format#specprovidesapis-optional\">\n              Learn how to change this.\n            </Link>\n          </Typography>\n        </div>\n      }\n      columns={apiEntityColumns}\n      entities={entities as ApiEntity[]}\n    />\n  );\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ComponentEntity,\n  RELATION_API_CONSUMED_BY,\n} from '@backstage/catalog-model';\nimport { Typography } from '@material-ui/core';\nimport {\n  EntityTable,\n  useEntity,\n  useRelatedEntities,\n} from '@backstage/plugin-catalog-react';\nimport React from 'react';\nimport {\n  CodeSnippet,\n  InfoCard,\n  InfoCardVariants,\n  Link,\n  Progress,\n  WarningPanel,\n} from '@backstage/core-components';\n\n/**\n * @public\n */\nexport const ConsumingComponentsCard = (props: {\n  variant?: InfoCardVariants;\n}) => {\n  const { variant = 'gridItem' } = props;\n  const { entity } = useEntity();\n  const { entities, loading, error } = useRelatedEntities(entity, {\n    type: RELATION_API_CONSUMED_BY,\n  });\n\n  if (loading) {\n    return (\n      <InfoCard variant={variant} title=\"Consumers\">\n        <Progress />\n      </InfoCard>\n    );\n  }\n\n  if (error || !entities) {\n    return (\n      <InfoCard variant={variant} title=\"Consumers\">\n        <WarningPanel\n          severity=\"error\"\n          title=\"Could not load components\"\n          message={<CodeSnippet text={`${error}`} language=\"text\" />}\n        />\n      </InfoCard>\n    );\n  }\n\n  return (\n    <EntityTable\n      title=\"Consumers\"\n      variant={variant}\n      emptyContent={\n        <div style={{ textAlign: 'center' }}>\n          <Typography variant=\"body1\">\n            No component consumes this API.\n          </Typography>\n          <Typography variant=\"body2\">\n            <Link to=\"https://backstage.io/docs/features/software-catalog/descriptor-format#specconsumesapis-optional\">\n              Learn how to change this.\n            </Link>\n          </Typography>\n        </div>\n      }\n      columns={EntityTable.componentEntityColumns}\n      entities={entities as ComponentEntity[]}\n    />\n  );\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ComponentEntity,\n  RELATION_API_PROVIDED_BY,\n} from '@backstage/catalog-model';\nimport { Typography } from '@material-ui/core';\nimport {\n  EntityTable,\n  useEntity,\n  useRelatedEntities,\n} from '@backstage/plugin-catalog-react';\nimport React from 'react';\nimport {\n  CodeSnippet,\n  InfoCard,\n  InfoCardVariants,\n  Link,\n  Progress,\n  WarningPanel,\n} from '@backstage/core-components';\n\n/** @public */\nexport const ProvidingComponentsCard = (props: {\n  variant?: InfoCardVariants;\n}) => {\n  const { variant = 'gridItem' } = props;\n  const { entity } = useEntity();\n  const { entities, loading, error } = useRelatedEntities(entity, {\n    type: RELATION_API_PROVIDED_BY,\n  });\n\n  if (loading) {\n    return (\n      <InfoCard variant={variant} title=\"Providers\">\n        <Progress />\n      </InfoCard>\n    );\n  }\n\n  if (error || !entities) {\n    return (\n      <InfoCard variant={variant} title=\"Providers\">\n        <WarningPanel\n          severity=\"error\"\n          title=\"Could not load components\"\n          message={<CodeSnippet text={`${error}`} language=\"text\" />}\n        />\n      </InfoCard>\n    );\n  }\n\n  return (\n    <EntityTable\n      title=\"Providers\"\n      variant={variant}\n      emptyContent={\n        <div style={{ textAlign: 'center' }}>\n          <Typography variant=\"body1\">\n            No component provides this API.\n          </Typography>\n          <Typography variant=\"body2\">\n            <Link to=\"https://backstage.io/docs/features/software-catalog/descriptor-format#specprovidesapis-optional\">\n              Learn how to change this.\n            </Link>\n          </Typography>\n        </div>\n      }\n      columns={EntityTable.componentEntityColumns}\n      entities={entities as ComponentEntity[]}\n    />\n  );\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ApiEntity } from '@backstage/catalog-model';\nimport { defaultDefinitionWidgets } from './components/ApiDefinitionCard';\nimport { apiDocsConfigRef } from './config';\nimport { registerComponentRouteRef, rootRoute } from './routes';\nimport {\n  createApiFactory,\n  createComponentExtension,\n  createPlugin,\n  createRoutableExtension,\n} from '@backstage/core-plugin-api';\n\n/** @public */\nexport const apiDocsPlugin = createPlugin({\n  id: 'api-docs',\n  routes: {\n    root: rootRoute,\n  },\n  apis: [\n    createApiFactory({\n      api: apiDocsConfigRef,\n      deps: {},\n      factory: () => {\n        const definitionWidgets = defaultDefinitionWidgets();\n        return {\n          getApiDefinitionWidget: (apiEntity: ApiEntity) => {\n            return definitionWidgets.find(d => d.type === apiEntity.spec.type);\n          },\n        };\n      },\n    }),\n  ],\n  externalRoutes: {\n    registerApi: registerComponentRouteRef,\n  },\n});\n\n/** @public */\nexport const ApiExplorerPage = apiDocsPlugin.provide(\n  createRoutableExtension({\n    name: 'ApiExplorerPage',\n    component: () =>\n      import('./components/ApiExplorerPage').then(m => m.ApiExplorerIndexPage),\n    mountPoint: rootRoute,\n  }),\n);\n\n/** @public */\nexport const EntityApiDefinitionCard = apiDocsPlugin.provide(\n  createComponentExtension({\n    name: 'EntityApiDefinitionCard',\n    component: {\n      lazy: () =>\n        import('./components/ApiDefinitionCard').then(m => m.ApiDefinitionCard),\n    },\n  }),\n);\n\n/** @public */\nexport const EntityConsumedApisCard = apiDocsPlugin.provide(\n  createComponentExtension({\n    name: 'EntityConsumedApisCard',\n    component: {\n      lazy: () =>\n        import('./components/ApisCards').then(m => m.ConsumedApisCard),\n    },\n  }),\n);\n\n/** @public */\nexport const EntityConsumingComponentsCard = apiDocsPlugin.provide(\n  createComponentExtension({\n    name: 'EntityConsumingComponentsCard',\n    component: {\n      lazy: () =>\n        import('./components/ComponentsCards').then(\n          m => m.ConsumingComponentsCard,\n        ),\n    },\n  }),\n);\n\n/** @public */\nexport const EntityProvidedApisCard = apiDocsPlugin.provide(\n  createComponentExtension({\n    name: 'EntityProvidedApisCard',\n    component: {\n      lazy: () =>\n        import('./components/ApisCards').then(m => m.ProvidedApisCard),\n    },\n  }),\n);\n\n/** @public */\nexport const EntityProvidingComponentsCard = apiDocsPlugin.provide(\n  createComponentExtension({\n    name: 'EntityProvidingComponentsCard',\n    component: {\n      lazy: () =>\n        import('./components/ComponentsCards').then(\n          m => m.ProvidingComponentsCard,\n        ),\n    },\n  }),\n);\n\n/** @public */\nexport const EntityHasApisCard = apiDocsPlugin.provide(\n  createComponentExtension({\n    name: 'EntityHasApisCard',\n    component: {\n      lazy: () => import('./components/ApisCards').then(m => m.HasApisCard),\n    },\n  }),\n);\n"],"names":["ApiExplorerPage"],"mappings":"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"}