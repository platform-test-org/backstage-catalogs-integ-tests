image:
  repository: ${appRegistry}/sreplatform/apps-images/backstage
  pullPolicy: IfNotPresent
  # Use commit hash image tag
  tag: ${Build.SourceVersion}

imagePullSecrets: []
nameOverride: "backstage"
fullnameOverride: "backstage"

restartPolicy:

initContainers: []

sidecarContainers: []

# The update strategy to apply to the Deployment
##
deploymentStrategy:
  rollingUpdate:
    maxUnavailable: 1
  type: RollingUpdate

## Liveness and readiness probe values
## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
##
livenessProbe:
  enabled: true
  failureThreshold: 5
  initialDelaySeconds: 10
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 1
  port: 7007
readinessProbe:
  enabled: true
  failureThreshold: 3
  initialDelaySeconds: 10
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 1
  port: 7007

# Path of the health check endpoint. All requests received on the port defined by
# the healthz-port parameter are forwarded internally to this path.
healthCheckPath: "/health"

environments:
#Ex:
# - name: company
#   value: stone

env:
  variables: {}
  secrets: {}
#Ex:
# name: value

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 7007

ingress:
  externalIngress:
    enabled: false
    pathType: ImplementationSpecific
    annotations:
      kubernetes.io/ingress.class: ingress-nginx-external
      nginx.ingress.kubernetes.io/rewrite-target: /
      nginx.ingress.kubernetes.io/server-snippet: |
          large_client_header_buffers 4 8k;
          client_header_buffer_size 1k;
    hosts:
      - host: ${appAddress}
        paths:
          - /
    tls:
      - secretName: ${tlsSecretName}
        hosts:
          - ${appAddress}

  internalIngress:
    enabled: true
    pathType: ImplementationSpecific
    annotations:
      kubernetes.io/ingress.class: ingress-nginx-internal
      nginx.ingress.kubernetes.io/rewrite-target: /
      nginx.ingress.kubernetes.io/server-snippet: |
          large_client_header_buffers 4 8k;
          client_header_buffer_size 1k;
    hosts:
      - host: ${appAddress}
        paths:
          - /
    tls:
      - secretName: ${tlsSecretName}
        hosts:
          - ${appAddress}

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 750m
    memory: 512Mi
  requests:
    cpu: 500m
    memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: ${autoScalingMinReplicas}
  maxReplicas: ${autoScalingMaxReplicas}
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# replicaCount has to be greater than the number of maxUnavailable
# you can check this helm issue in the following link:
# https://github.com/helm/helm/issues/3173#issuecomment-596458299
replicaCount: ${podsReplicaCount}
minAvailable: 1

podDisruptionBudget: {}

nodeSelector: {}

tolerations: []

affinity: {}
